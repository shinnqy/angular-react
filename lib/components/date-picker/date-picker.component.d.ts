import { ReactWrapperComponent } from '@angular-react/core';
import { ChangeDetectorRef, ElementRef, EventEmitter, Renderer2 } from '@angular/core';
import { IDatePickerProps } from 'office-ui-fabric-react/lib/DatePicker';
export declare class FabDatePickerComponent extends ReactWrapperComponent<IDatePickerProps> {
    protected reactNodeRef: ElementRef;
    componentRef?: IDatePickerProps['componentRef'];
    theme?: IDatePickerProps['theme'];
    calloutProps?: IDatePickerProps['calloutProps'];
    calendarProps?: IDatePickerProps['calendarProps'];
    textField?: IDatePickerProps['textField'];
    calendarAs?: IDatePickerProps['calendarAs'];
    label?: IDatePickerProps['label'];
    isRequired?: IDatePickerProps['isRequired'];
    disabled?: IDatePickerProps['disabled'];
    ariaLabel?: IDatePickerProps['ariaLabel'];
    underlined?: IDatePickerProps['underlined'];
    pickerAriaLabel?: IDatePickerProps['pickerAriaLabel'];
    isMonthPickerVisible?: IDatePickerProps['isMonthPickerVisible'];
    showMonthPickerAsOverlay?: IDatePickerProps['showMonthPickerAsOverlay'];
    allowTextInput?: IDatePickerProps['allowTextInput'];
    disableAutoFocus?: IDatePickerProps['disableAutoFocus'];
    placeholder?: IDatePickerProps['placeholder'];
    today?: IDatePickerProps['today'];
    value?: IDatePickerProps['value'];
    formatDate?: IDatePickerProps['formatDate'];
    parseDateFromString?: IDatePickerProps['parseDateFromString'];
    firstDayOfWeek?: IDatePickerProps['firstDayOfWeek'];
    strings?: IDatePickerProps['strings'];
    highlightCurrentMonth?: IDatePickerProps['highlightCurrentMonth'];
    highlightSelectedMonth?: IDatePickerProps['highlightSelectedMonth'];
    showWeekNumbers?: IDatePickerProps['showWeekNumbers'];
    firstWeekOfYear?: IDatePickerProps['firstWeekOfYear'];
    showGoToToday?: IDatePickerProps['showGoToToday'];
    borderless?: IDatePickerProps['borderless'];
    className?: IDatePickerProps['className'];
    dateTimeFormatter?: IDatePickerProps['dateTimeFormatter'];
    minDate?: IDatePickerProps['minDate'];
    maxDate?: IDatePickerProps['maxDate'];
    initialPickerDate?: IDatePickerProps['initialPickerDate'];
    allFocusable?: IDatePickerProps['allFocusable'];
    showCloseButton?: IDatePickerProps['showCloseButton'];
    tabIndex?: IDatePickerProps['tabIndex'];
    readonly onSelectDate: EventEmitter<{
        date: Date;
    }>;
    readonly onAfterMenuDismiss: EventEmitter<void>;
    constructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef, renderer: Renderer2);
    onSelectDateHandler(date: Date | null | undefined): void;
}
