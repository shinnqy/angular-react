{"version":3,"file":"angular-react-fabric-lib-components-progress-indicator.js","sources":["ng://@angular-react/fabric/lib/components/progress-indicator/progress-indicator.component.ts","ng://@angular-react/fabric/lib/components/progress-indicator/progress-indicator.module.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { ReactWrapperComponent, JsxRenderFunc, InputRendererOptions } from '@angular-react/core';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Renderer2,\r\n  ViewChild,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { IProgressIndicatorProps } from 'office-ui-fabric-react/lib/ProgressIndicator';\r\n\r\n@Component({\r\n  selector: 'fab-progress-indicator',\r\n  exportAs: 'fabProgressIndicator',\r\n  template: `\r\n    <ProgressIndicator\r\n      #reactNode\r\n      [ariaValueText]=\"ariaValueText\"\r\n      [barHeight]=\"barHeight\"\r\n      [className]=\"className\"\r\n      [description]=\"description\"\r\n      [label]=\"label\"\r\n      [RenderProgress]=\"renderProgress && onRenderProgress\"\r\n      [percentComplete]=\"percentComplete\"\r\n      [progressHidden]=\"progressHidden\"\r\n      [styles]=\"styles\"\r\n      [theme]=\"theme\"\r\n    >\r\n    </ProgressIndicator>\r\n  `,\r\n  styles: ['react-renderer'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FabProgressIndicatorComponent extends ReactWrapperComponent<IProgressIndicatorProps> implements OnInit {\r\n  @ViewChild('reactNode', { static: true }) protected reactNodeRef: ElementRef;\r\n\r\n  @Input() ariaValueText?: IProgressIndicatorProps['ariaValueText'];\r\n  @Input() barHeight?: IProgressIndicatorProps['barHeight'];\r\n  @Input() className?: IProgressIndicatorProps['className'];\r\n  @Input() renderProgress?: InputRendererOptions<IProgressIndicatorProps>;\r\n  @Input() percentComplete?: IProgressIndicatorProps['percentComplete'];\r\n  @Input() progressHidden?: IProgressIndicatorProps['progressHidden'];\r\n  @Input() styles?: IProgressIndicatorProps['styles'];\r\n  @Input() theme?: IProgressIndicatorProps['theme'];\r\n\r\n  @Input()\r\n  set renderDescription(value: InputRendererOptions<{}>) {\r\n    this._renderDescription = value;\r\n\r\n    if (value) {\r\n      this.description = this.createInputJsxRenderer(value)({});\r\n    }\r\n  }\r\n\r\n  get renderDescription(): InputRendererOptions<{}> {\r\n    return this._renderDescription;\r\n  }\r\n\r\n  description?: React.ReactNode;\r\n  private _renderDescription?: InputRendererOptions<{}>;\r\n\r\n  @Input()\r\n  set renderLabel(value: InputRendererOptions<{}>) {\r\n    this._renderLabel = value;\r\n\r\n    if (value) {\r\n      this.label = this.createInputJsxRenderer(value)({});\r\n    }\r\n  }\r\n\r\n  get renderLabel(): InputRendererOptions<{}> {\r\n    return this._renderLabel;\r\n  }\r\n\r\n  label?: React.ReactNode;\r\n  private _renderLabel?: InputRendererOptions<{}>;\r\n\r\n  onRenderProgress: (props?: IProgressIndicatorProps, defaultRender?: JsxRenderFunc<IProgressIndicatorProps>) => JSX.Element;\r\n\r\n  constructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef, renderer: Renderer2) {\r\n    super(elementRef, changeDetectorRef, renderer);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onRenderProgress = this.createRenderPropHandler(this.renderProgress);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { registerElement } from '@angular-react/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { ProgressIndicator } from 'office-ui-fabric-react/lib/ProgressIndicator';\r\nimport { FabProgressIndicatorComponent } from './progress-indicator.component';\r\n\r\nconst components = [FabProgressIndicatorComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: components,\r\n  exports: components,\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n})\r\nexport class FabProgressIndicatorModule {\r\n  constructor() {\r\n    registerElement('ProgressIndicator', () => ProgressIndicator);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;MAsCa,6BAA8B,SAAQ,qBAA8C;;;;;;IA8C/F,YAAY,UAAsB,EAAE,iBAAoC,EAAE,QAAmB;QAC3F,KAAK,CAAC,UAAU,EAAE,iBAAiB,EAAE,QAAQ,CAAC,CAAC;KAChD;;;;;IApCD,IACI,iBAAiB,CAAC,KAA+B;QACnD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAEhC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;SAC3D;KACF;;;;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;IAKD,IACI,WAAW,CAAC,KAA+B;QAC7C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;SACrD;KACF;;;;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;IAWD,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC3E;;;YA1EF,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,QAAQ,EAAE,sBAAsB;gBAChC,QAAQ,EAAE;;;;;;;;;;;;;;;GAeT;gBAED,eAAe,EAAE,uBAAuB,CAAC,MAAM;yBADtC,gBAAgB;aAE1B;;;;YA7BC,UAAU;YAFV,iBAAiB;YAIjB,SAAS;;;2BA6BR,SAAS,SAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;4BAEvC,KAAK;wBACL,KAAK;wBACL,KAAK;6BACL,KAAK;8BACL,KAAK;6BACL,KAAK;qBACL,KAAK;oBACL,KAAK;gCAEL,KAAK;0BAgBL,KAAK;;;;;;;IA3BN,qDAA6E;;IAE7E,sDAAkE;;IAClE,kDAA0D;;IAC1D,kDAA0D;;IAC1D,uDAAwE;;IACxE,wDAAsE;;IACtE,uDAAoE;;IACpE,+CAAoD;;IACpD,8CAAkD;;IAelD,oDAA8B;;;;;IAC9B,2DAAsD;;IAetD,8CAAwB;;;;;IACxB,qDAAgD;;IAEhD,yDAA2H;;;;;;;;MCzEvH,UAAU,GAAG,CAAC,6BAA6B,CAAC;AAQlD,MAAa,0BAA0B;IACrC;QACE,eAAe,CAAC,mBAAmB;;;QAAE,MAAM,iBAAiB,EAAC,CAAC;KAC/D;;;YATF,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,UAAU;gBACxB,OAAO,EAAE,UAAU;gBACnB,OAAO,EAAE,CAAC,gBAAgB,CAAC;aAC5B;;;;;;;;;;;;;;;;;"}