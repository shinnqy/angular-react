{"version":3,"file":"angular-react-fabric-lib-components-command-bar.js","sources":["ng://@angular-react/fabric/lib/components/command-bar/directives/command-bar-item.directives.ts","ng://@angular-react/fabric/lib/components/command-bar/directives/command-bar-items.directives.ts","ng://@angular-react/fabric/lib/components/command-bar/command-bar.component.ts","ng://@angular-react/fabric/lib/components/command-bar/command-bar.module.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { ContentChild, Directive, Input, TemplateRef, ElementRef } from '@angular/core';\r\nimport { ItemChangedPayload } from '@angular-react/fabric/lib/components/core';\r\nimport { ContextualMenuItemDirective } from '@angular-react/fabric/lib/components/contextual-menu'\r\nimport {\r\n  ICommandBarItemOptions,\r\n  ICommandBarItemOptionsRenderContext,\r\n  ICommandBarItemOptionsRenderIconContext,\r\n} from '../command-bar.component';\r\n\r\nexport type CommandBarItemChangedPayload = ItemChangedPayload<ICommandBarItemOptions['key'], ICommandBarItemOptions>;\r\n\r\n/**\r\n * Wrapper directive to allow rendering a custom item to a CommandBarItem.\r\n */\r\n@Directive({ selector: 'fab-command-bar-item > render' })\r\nexport class CommandBarItemRenderDirective {\r\n  @ContentChild(TemplateRef, { static: false }) readonly templateRef: TemplateRef<ICommandBarItemOptionsRenderContext>;\r\n}\r\n\r\n/**\r\n * Wrapper directive to allow rendering a custom icon to a CommandBarItem.\r\n */\r\n@Directive({ selector: 'fab-command-bar-item > render-icon' })\r\nexport class CommandBarItemRenderIconDirective {\r\n  @ContentChild(TemplateRef, { static: false }) readonly templateRef: TemplateRef<ICommandBarItemOptionsRenderIconContext>;\r\n}\r\n\r\n@Directive({ selector: 'fab-command-bar-item' })\r\nexport class CommandBarItemDirective extends ContextualMenuItemDirective implements ICommandBarItemOptions {\r\n  // ICommandBarItemOptions implementation\r\n  @Input() iconOnly?: ICommandBarItemOptions['iconOnly'];\r\n  @Input() tooltipHostProps?: ICommandBarItemOptions['tooltipHostProps'];\r\n  @Input() buttonStyles?: ICommandBarItemOptions['buttonStyles'];\r\n  @Input() cacheKey?: ICommandBarItemOptions['cacheKey'];\r\n  @Input() renderedInOverflow?: ICommandBarItemOptions['renderedInOverflow'];\r\n  @Input() commandBarButtonAs?: ICommandBarItemOptions['commandBarButtonAs'];\r\n\r\n  constructor(elementRef: ElementRef<HTMLElement>) {\r\n    super(elementRef);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { ContentChildren, Directive, QueryList } from '@angular/core';\r\nimport { ChangeableItemsDirective } from '@angular-react/fabric/lib/components/core';\r\nimport { getDataAttributes } from '@angular-react/fabric/lib/utils';\r\n\r\nimport { ICommandBarItemOptions } from '../command-bar.component';\r\nimport { CommandBarItemDirective } from './command-bar-item.directives';\r\n\r\nexport abstract class CommandBarItemsDirectiveBase extends ChangeableItemsDirective<ICommandBarItemOptions> {\r\n  abstract readonly directiveItems: QueryList<CommandBarItemDirective>;\r\n\r\n  get items() {\r\n    return (\r\n      this.directiveItems &&\r\n      this.directiveItems.map<ICommandBarItemOptions>((directiveItem: CommandBarItemDirective) => ({\r\n        ...directiveItem,\r\n        ...getDataAttributes(directiveItem.elementRef.nativeElement, true),\r\n        onClick: (ev, item) => {\r\n          directiveItem.click.emit({\r\n            ev: ev && ev.nativeEvent,\r\n            item: item,\r\n          });\r\n        },\r\n      }))\r\n    );\r\n  }\r\n}\r\n\r\n@Directive({ selector: 'fab-command-bar > items' })\r\nexport class CommandBarItemsDirective extends CommandBarItemsDirectiveBase {\r\n  @ContentChildren(CommandBarItemDirective) readonly directiveItems: QueryList<CommandBarItemDirective>;\r\n}\r\n\r\n@Directive({ selector: 'fab-command-bar > far-items' })\r\nexport class CommandBarFarItemsDirective extends CommandBarItemsDirectiveBase {\r\n  @ContentChildren(CommandBarItemDirective) readonly directiveItems: QueryList<CommandBarItemDirective>;\r\n}\r\n\r\n@Directive({ selector: 'fab-command-bar > overflow-items' })\r\nexport class CommandBarOverflowItemsDirective extends CommandBarItemsDirectiveBase {\r\n  @ContentChildren(CommandBarItemDirective) readonly directiveItems: QueryList<CommandBarItemDirective>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { InputRendererOptions, KnownKeys, ReactWrapperComponent } from '@angular-react/core';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  Renderer2,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ICommandBarItemProps, ICommandBarProps } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { Subscription } from 'rxjs';\r\nimport { mergeItemChanges } from '@angular-react/fabric/lib/components/core';\r\nimport { omit } from '@angular-react/fabric/lib/utils';\r\nimport { OnChanges, TypedChanges } from '@angular-react/fabric/lib/declarations';\r\n\r\nimport { CommandBarItemChangedPayload, CommandBarItemDirective } from './directives/command-bar-item.directives';\r\nimport {\r\n  CommandBarFarItemsDirective,\r\n  CommandBarItemsDirective,\r\n  CommandBarItemsDirectiveBase,\r\n  CommandBarOverflowItemsDirective,\r\n} from './directives/command-bar-items.directives';\r\n\r\n@Component({\r\n  selector: 'fab-command-bar',\r\n  exportAs: 'fabCommandBar',\r\n  template: `\r\n    <CommandBar\r\n      #reactNode\r\n      [componentRef]=\"componentRef\"\r\n      [items]=\"transformedItems_\"\r\n      [farItems]=\"transformedFarItems_\"\r\n      [overflowItems]=\"transformedOverflowItems_\"\r\n      [overflowButtonProps]=\"overflowButtonProps\"\r\n      [overflowButtonAs]=\"overflowButtonAs\"\r\n      [buttonAs]=\"buttonAs\"\r\n      [shiftOnReduce]=\"shiftOnReduce\"\r\n      [className]=\"className\"\r\n      [ariaLabel]=\"ariaLabel\"\r\n      [styles]=\"styles\"\r\n      [theme]=\"theme\"\r\n      [ReduceData]=\"onReduceData\"\r\n      [GrowData]=\"onGrowData\"\r\n      (onDataReduced)=\"(onDataReduced)\"\r\n      (onDataGrown)=\"(onDataGrown)\"\r\n    >\r\n    </CommandBar>\r\n  `,\r\n  styles: ['react-renderer'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FabCommandBarComponent extends ReactWrapperComponent<ICommandBarProps>\r\n  implements OnChanges<FabCommandBarComponent>, AfterContentInit, OnDestroy {\r\n  @ContentChild(CommandBarItemsDirective, { static: true }) readonly itemsDirective?: CommandBarItemsDirective;\r\n  @ContentChild(CommandBarFarItemsDirective, { static: true }) readonly farItemsDirective?: CommandBarFarItemsDirective;\r\n  @ContentChild(CommandBarOverflowItemsDirective, { static: true }) readonly overflowItemsDirective?: CommandBarOverflowItemsDirective;\r\n\r\n  @ViewChild('reactNode', { static: true }) protected reactNodeRef: ElementRef;\r\n\r\n  @Input() componentRef?: ICommandBarProps['componentRef'];\r\n  @Input() overflowButtonProps?: ICommandBarProps['overflowButtonProps'];\r\n  @Input() overflowButtonAs?: ICommandBarProps['overflowButtonAs'];\r\n  @Input() buttonAs?: ICommandBarProps['buttonAs'];\r\n  @Input() shiftOnReduce?: ICommandBarProps['shiftOnReduce'];\r\n  @Input() className?: ICommandBarProps['className'];\r\n  @Input() ariaLabel?: ICommandBarProps['ariaLabel'];\r\n  @Input() styles?: ICommandBarProps['styles'];\r\n  @Input() theme?: ICommandBarProps['theme'];\r\n  @Input() onReduceData?: ICommandBarProps['onReduceData'];\r\n  @Input() onGrowData?: ICommandBarProps['onGrowData'];\r\n\r\n  @Input() items: ReadonlyArray<ICommandBarItemOptions>;\r\n  @Input() farItems: ReadonlyArray<ICommandBarItemOptions>;\r\n  @Input() overflowItems: ReadonlyArray<ICommandBarItemOptions>;\r\n\r\n  @Output() readonly onDataReduced = new EventEmitter<{ movedItem: ICommandBarItemProps }>();\r\n  @Output() readonly onDataGrown = new EventEmitter<{ movedItem: ICommandBarItemProps }>();\r\n\r\n  /** @internal */\r\n  transformedItems_: ReadonlyArray<ICommandBarItemProps>;\r\n  /** @internal */\r\n  transformedFarItems_: ReadonlyArray<ICommandBarItemProps>;\r\n  /** @internal */\r\n  transformedOverflowItems_: ReadonlyArray<ICommandBarItemProps>;\r\n\r\n  private readonly _subscriptions: Subscription[] = [];\r\n\r\n  constructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef, renderer: Renderer2, ngZone: NgZone) {\r\n    super(elementRef, changeDetectorRef, renderer, { ngZone, setHostDisplay: true });\r\n  }\r\n\r\n  ngOnChanges(changes: TypedChanges<FabCommandBarComponent>) {\r\n    if (\r\n      changes['items'] &&\r\n      changes['items'].previousValue !== changes['items'].currentValue &&\r\n      changes['items'].currentValue\r\n    )\r\n      this._createTransformedItems(changes['items'].currentValue);\r\n    if (\r\n      changes['farItems'] &&\r\n      changes['farItems'].previousValue !== changes['farItems'].currentValue &&\r\n      changes['farItems'].currentValue\r\n    )\r\n      this._createTransformedFarItems(changes['farItems'].currentValue);\r\n    if (\r\n      changes['overflowItems'] &&\r\n      changes['overflowItems'].previousValue !== changes['overflowItems'].currentValue &&\r\n      changes['overflowItems'].currentValue\r\n    )\r\n      this._createTransformedOverflowItems(changes['overflowItems'].currentValue);\r\n\r\n    super.ngOnChanges(changes);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.itemsDirective) this._initDirective(this.itemsDirective, 'items');\r\n    if (this.farItemsDirective) this._initDirective(this.farItemsDirective, 'farItems');\r\n    if (this.overflowItemsDirective) this._initDirective(this.overflowItemsDirective, 'overflowItems');\r\n    super.ngAfterContentInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._subscriptions.forEach(subscription => subscription.unsubscribe());\r\n  }\r\n\r\n  private _initDirective<TCommandBarItemsDirective extends CommandBarItemsDirectiveBase>(\r\n    directive: TCommandBarItemsDirective,\r\n    itemsPropertyKey: 'items' | 'farItems' | 'overflowItems'\r\n  ) {\r\n    const transformItemsFunc =\r\n      (directive instanceof CommandBarItemsDirective && (newItems => this._createTransformedItems(newItems))) ||\r\n      (directive instanceof CommandBarFarItemsDirective && (newItems => this._createTransformedFarItems(newItems))) ||\r\n      (directive instanceof CommandBarOverflowItemsDirective &&\r\n        (newItems => this._createTransformedOverflowItems(newItems)));\r\n    null;\r\n\r\n    if (!transformItemsFunc) {\r\n      throw new Error('Invalid directive given');\r\n    }\r\n\r\n    const setItems = (\r\n      mapper: (items: ReadonlyArray<ICommandBarItemOptions>) => ReadonlyArray<ICommandBarItemOptions>\r\n    ) => {\r\n      this[itemsPropertyKey] = mapper(this[itemsPropertyKey]);\r\n      transformItemsFunc(this[itemsPropertyKey]);\r\n\r\n      this.markForCheck();\r\n    };\r\n\r\n    // Initial items\r\n    setItems(() => directive.items);\r\n\r\n    // Subscribe to adding/removing items\r\n    this._subscriptions.push(\r\n      directive.onItemsChanged.subscribe((newItems: QueryList<CommandBarItemDirective>) => {\r\n        setItems(() => newItems.map<ICommandBarItemOptions>(directive => directive));\r\n      })\r\n    );\r\n\r\n    // Subscribe for existing items changes\r\n    this._subscriptions.push(\r\n      directive.onChildItemChanged.subscribe(({ key, changes }: CommandBarItemChangedPayload) => {\r\n        setItems(items => items.map(item => (item.key === key ? mergeItemChanges(item, changes) : item)));\r\n        this.markForCheck();\r\n      })\r\n    );\r\n  }\r\n\r\n  private _createTransformedItems(newItems: ReadonlyArray<ICommandBarItemOptions>) {\r\n    this.transformedItems_ = newItems.map(item => this._transformCommandBarItemOptionsToProps(item));\r\n  }\r\n\r\n  private _createTransformedFarItems(newItems: ReadonlyArray<ICommandBarItemOptions>) {\r\n    this.transformedFarItems_ = newItems.map(item => this._transformCommandBarItemOptionsToProps(item));\r\n  }\r\n\r\n  private _createTransformedOverflowItems(newItems: ReadonlyArray<ICommandBarItemOptions>) {\r\n    this.transformedOverflowItems_ = newItems.map(item => this._transformCommandBarItemOptionsToProps(item));\r\n  }\r\n\r\n  private _transformCommandBarItemOptionsToProps(itemOptions: ICommandBarItemOptions): ICommandBarItemProps {\r\n    const sharedProperties = omit(itemOptions, 'renderIcon', 'render');\r\n\r\n    // Legacy render mode is used for the icon because otherwise the icon is to the right of the text (instead of the usual left)\r\n    const iconRenderer = this.createInputJsxRenderer(itemOptions.renderIcon, { legacyRenderMode: true });\r\n    const renderer = this.createInputJsxRenderer(itemOptions.render);\r\n\r\n    // @ts-ignore\r\n    return Object.assign(\r\n      {},\r\n      sharedProperties,\r\n      iconRenderer && {\r\n        onRenderIcon: (item: IContextualMenuItem) => iconRenderer({ contextualMenuItem: item }),\r\n      },\r\n      renderer &&\r\n      ({ onRender: (item, dismissMenu) => renderer({ item, dismissMenu }) } as Pick<ICommandBarItemProps, 'onRender'>)\r\n    ) as ICommandBarItemProps;\r\n  }\r\n}\r\n\r\n// Not using `Omit` here since it confused the TypeScript compiler and it just showed the properties listed here (`renderIcon`, `render` and `data`).\r\n// The type here is just `Omit` without the generics though.\r\nexport interface ICommandBarItemOptions<TData = any>\r\n  extends Pick<ICommandBarItemProps, Exclude<KnownKeys<ICommandBarItemProps>, 'onRender' | 'onRenderIcon'>> {\r\n  readonly renderIcon?: InputRendererOptions<ICommandBarItemOptionsRenderIconContext>;\r\n  readonly render?: InputRendererOptions<ICommandBarItemOptionsRenderContext>;\r\n  readonly data?: TData;\r\n}\r\n\r\nexport interface ICommandBarItemOptionsRenderContext {\r\n  item: any;\r\n  dismissMenu: (ev?: any, dismissAll?: boolean) => void;\r\n}\r\n\r\nexport interface ICommandBarItemOptionsRenderIconContext {\r\n  contextualMenuItem: IContextualMenuItem;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { registerElement } from '@angular-react/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport * as OverflowSetCss from 'office-ui-fabric-react/lib-amd/components/OverflowSet/OverflowSet.scss';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { noop } from '@angular-react/fabric/lib/utils';\r\n\r\nimport { FabContextualMenuModule } from '@angular-react/fabric/lib/components/contextual-menu';\r\nimport { FabCommandBarComponent } from './command-bar.component';\r\nimport {\r\n  CommandBarItemDirective,\r\n  CommandBarItemRenderDirective,\r\n  CommandBarItemRenderIconDirective,\r\n} from './directives/command-bar-item.directives';\r\nimport {\r\n  CommandBarFarItemsDirective,\r\n  CommandBarItemsDirective,\r\n  CommandBarOverflowItemsDirective,\r\n} from './directives/command-bar-items.directives';\r\n\r\n// Dummy action to force OverflowSetCss to load and not be tree-shaken away.\r\nnoop(OverflowSetCss);\r\n\r\nconst components = [\r\n  FabCommandBarComponent,\r\n  CommandBarItemsDirective,\r\n  CommandBarFarItemsDirective,\r\n  CommandBarOverflowItemsDirective,\r\n  CommandBarItemDirective,\r\n  CommandBarItemRenderDirective,\r\n  CommandBarItemRenderIconDirective,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FabContextualMenuModule],\r\n  declarations: components,\r\n  exports: [...components, FabContextualMenuModule],\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n})\r\nexport class FabCommandBarModule {\r\n  constructor() {\r\n    // Add any React elements to the registry (used by the renderer).\r\n    registerElement('CommandBar', () => CommandBar);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}