{"version":3,"file":"angular-react-fabric-lib-components-hover-card.js","sources":["ng://@angular-react/fabric/lib/components/hover-card/expanding-card.component.ts","ng://@angular-react/fabric/lib/components/hover-card/hover-card.component.ts","ng://@angular-react/fabric/lib/components/hover-card/plain-card.component.ts","ng://@angular-react/fabric/lib/components/hover-card/hover-card.module.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { InputRendererOptions, ReactWrapperComponent, JsxRenderFunc } from '@angular-react/core';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  Renderer2,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { IExpandingCardProps } from 'office-ui-fabric-react/lib/HoverCard';\r\n\r\n@Component({\r\n  selector: 'fab-expanding-card',\r\n  exportAs: 'fabExpandingCard',\r\n  template: `\r\n    <ExpandingCard\r\n      [componentRef]=\"componentRef\"\r\n      [className]=\"className\"\r\n      [directionalHint]=\"directionalHint\"\r\n      [directionalHintFixed]=\"directionalHintFixed\"\r\n      [firstFocus]=\"firstFocus\"\r\n      [gapSpace]=\"gapSpace\"\r\n      [renderData]=\"renderData\"\r\n      [styles]=\"styles\"\r\n      [targetElement]=\"targetElement\"\r\n      [theme]=\"theme\"\r\n      [trapFocus]=\"trapFocus\"\r\n      [compactCardHeight]=\"compactCardHeight\"\r\n      [expandedCardHeight]=\"expandedCardHeight\"\r\n      [mode]=\"mode\"\r\n      [RenderCompactCard]=\"renderCompactCard && onRenderCompactCard\"\r\n      [RenderExpandedCard]=\"renderExpandedCard && onRenderExpandedCard\"\r\n      (onEnter)=\"onEnter.emit()\"\r\n      (onLeave)=\"onLeave.emit()\"\r\n    >\r\n      <ReactContent><ng-content></ng-content></ReactContent>\r\n    </ExpandingCard>\r\n  `,\r\n  styles: ['react-renderer'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FabExpandingCardComponent extends ReactWrapperComponent<IExpandingCardProps> implements OnInit {\r\n  @ViewChild('reactNode', { static: false }) protected reactNodeRef: ElementRef;\r\n\r\n  @Input() componentRef?: IExpandingCardProps['componentRef'];\r\n  @Input() className?: IExpandingCardProps['className'];\r\n  @Input() directionalHint?: IExpandingCardProps['directionalHint'];\r\n  @Input() directionalHintFixed?: IExpandingCardProps['directionalHintFixed'];\r\n  @Input() firstFocus?: IExpandingCardProps['firstFocus'];\r\n  @Input() gapSpace?: IExpandingCardProps['gapSpace'];\r\n  @Input() renderData?: IExpandingCardProps['renderData'];\r\n  @Input() styles?: IExpandingCardProps['styles'];\r\n  @Input() targetElement?: IExpandingCardProps['targetElement'];\r\n  @Input() theme?: IExpandingCardProps['theme'];\r\n  @Input() trapFocus?: IExpandingCardProps['trapFocus'];\r\n  @Input() compactCardHeight?: IExpandingCardProps['compactCardHeight'];\r\n  @Input() expandedCardHeight?: IExpandingCardProps['expandedCardHeight'];\r\n  @Input() mode?: IExpandingCardProps['mode'];\r\n  @Input() renderCompactCard?: InputRendererOptions<IExpandingCardProps>;\r\n  @Input() renderExpandedCard?: InputRendererOptions<IExpandingCardProps>;\r\n\r\n  @Output() readonly onEnter = new EventEmitter<void>();\r\n  @Output() readonly onLeave = new EventEmitter<void>();\r\n\r\n  constructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef, renderer: Renderer2, ngZone: NgZone) {\r\n    super(elementRef, changeDetectorRef, renderer, { ngZone });\r\n  }\r\n\r\n  onRenderCompactCard: (props?: IExpandingCardProps, defaultRender?: JsxRenderFunc<IExpandingCardProps>) => JSX.Element;\r\n  onRenderExpandedCard: (\r\n    props?: IExpandingCardProps,\r\n    defaultRender?: JsxRenderFunc<IExpandingCardProps>\r\n  ) => JSX.Element;\r\n\r\n  ngOnInit() {\r\n    this.onRenderCompactCard = this.createRenderPropHandler(this.renderCompactCard);\r\n    this.onRenderExpandedCard = this.createRenderPropHandler(this.renderExpandedCard);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { InputRendererOptions, Omit, ReactWrapperComponent } from '@angular-react/core';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  Output,\r\n  Renderer2,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { IExpandingCardProps, IHoverCardProps, IPlainCardProps } from 'office-ui-fabric-react/lib/HoverCard';\r\nimport { omit } from '@angular-react/fabric/lib/utils';\r\n\r\n@Component({\r\n  selector: 'fab-hover-card',\r\n  exportAs: 'fabHoverCard',\r\n  template: `\r\n    <HoverCard\r\n      #reactNode\r\n      [componentRef]=\"componentRef\"\r\n      [className]=\"className\"\r\n      [theme]=\"theme\"\r\n      [type]=\"type\"\r\n      [expandingCardProps]=\"transformedExpandingCardProps\"\r\n      [plainCardProps]=\"transformedPlainCardProps\"\r\n      [setAriaDescribedBy]=\"setAriaDescribedBy\"\r\n      [cardOpenDelay]=\"cardOpenDelay\"\r\n      [cardDismissDelay]=\"cardDismissDelay\"\r\n      [expandedCardOpenDelay]=\"expandedCardOpenDelay\"\r\n      [sticky]=\"sticky\"\r\n      [instantOpenOnClick]=\"instantOpenOnClick\"\r\n      [styles]=\"styles\"\r\n      [target]=\"target\"\r\n      [eventListenerTarget]=\"eventListenerTarget\"\r\n      [trapFocus]=\"trapFocus\"\r\n      [shouldBlockHoverCard]=\"shouldBlockHoverCard\"\r\n      [setInitialFocus]=\"setInitialFocus\"\r\n      [openHotKey]=\"openHotKey\"\r\n      (onCardVisible)=\"onCardVisible.emit()\"\r\n      (onCardHide)=\"onCardHide.emit()\"\r\n      (onCardExpand)=\"onCardExpand.emit()\"\r\n    >\r\n      <ReactContent><ng-content></ng-content></ReactContent>\r\n    </HoverCard>\r\n  `,\r\n  styles: ['react-renderer'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FabHoverCardComponent extends ReactWrapperComponent<IHoverCardProps> {\r\n  @ViewChild('reactNode', { static: true }) protected reactNodeRef: ElementRef;\r\n\r\n  @Input() componentRef?: IHoverCardProps['componentRef'];\r\n  @Input() className?: IHoverCardProps['className'];\r\n  @Input() theme?: IHoverCardProps['theme'];\r\n  @Input() type?: IHoverCardProps['type'];\r\n  @Input() setAriaDescribedBy?: IHoverCardProps['setAriaDescribedBy'];\r\n  @Input() cardOpenDelay?: IHoverCardProps['cardOpenDelay'];\r\n  @Input() cardDismissDelay?: IHoverCardProps['cardDismissDelay'];\r\n  @Input() expandedCardOpenDelay?: IHoverCardProps['expandedCardOpenDelay'];\r\n  @Input() sticky?: IHoverCardProps['sticky'];\r\n  @Input() instantOpenOnClick?: IHoverCardProps['instantOpenOnClick'];\r\n  @Input() styles?: IHoverCardProps['styles'];\r\n  @Input() target?: IHoverCardProps['target'];\r\n  @Input() eventListenerTarget?: IHoverCardProps['eventListenerTarget'];\r\n  @Input() trapFocus?: IHoverCardProps['trapFocus'];\r\n  @Input() shouldBlockHoverCard?: () => boolean; // Workaround for bug in the Fabric React types (() => void)\r\n  @Input() setInitialFocus?: IHoverCardProps['setInitialFocus'];\r\n  @Input() openHotKey?: IHoverCardProps['openHotKey'];\r\n  @Input()\r\n  set expandingCardOptions(value: IExpandingCardOptions) {\r\n    this._expandingCardOptions = value;\r\n    if (value) {\r\n      this.transformedExpandingCardProps = this._transformExpandingCardOptionsToProps(value);\r\n    }\r\n  }\r\n\r\n  get expandingCardOptions(): IExpandingCardOptions {\r\n    return this._expandingCardOptions;\r\n  }\r\n\r\n  @Input() set plainCardOptions(value: IPlainCardOptions) {\r\n    this._plainCardOptions = value;\r\n    if (value) {\r\n      this.transformedPlainCardProps = this._transformPlainCardOptionsToProps(value);\r\n    }\r\n  }\r\n\r\n  get plainCardOptions(): IPlainCardOptions {\r\n    return this._plainCardOptions;\r\n  }\r\n\r\n  @Output() readonly onCardVisible = new EventEmitter<void>();\r\n  @Output() readonly onCardHide = new EventEmitter<void>();\r\n  @Output() readonly onCardExpand = new EventEmitter<void>();\r\n\r\n  transformedExpandingCardProps: IExpandingCardProps;\r\n  private _expandingCardOptions: IExpandingCardOptions;\r\n\r\n  transformedPlainCardProps: IPlainCardProps;\r\n  private _plainCardOptions: IPlainCardOptions;\r\n\r\n  constructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef, renderer: Renderer2, ngZone: NgZone) {\r\n    super(elementRef, changeDetectorRef, renderer, { ngZone });\r\n  }\r\n\r\n  private _transformExpandingCardOptionsToProps(options: IExpandingCardOptions): IExpandingCardProps {\r\n    const sharedProperties = omit(options, 'renderCompactCard', 'renderExpandedCard');\r\n\r\n    const compactCardRenderer = this.createInputJsxRenderer(options.renderCompactCard);\r\n    const expandedCardRenderer = this.createInputJsxRenderer(options.renderExpandedCard);\r\n\r\n    return Object.assign(\r\n      {},\r\n      sharedProperties,\r\n      compactCardRenderer &&\r\n      ({ onRenderCompactCard: data => compactCardRenderer({ data }) } as Pick<\r\n        IExpandingCardProps,\r\n        'onRenderCompactCard'\r\n      >),\r\n      expandedCardRenderer &&\r\n      ({ onRenderExpandedCard: data => expandedCardRenderer({ data }) } as Pick<\r\n        IExpandingCardProps,\r\n        'onRenderExpandedCard'\r\n      >)\r\n    );\r\n  }\r\n\r\n  private _transformPlainCardOptionsToProps(options: IPlainCardOptions): IPlainCardProps {\r\n    const sharedProperties = omit(options, 'renderPlainCard');\r\n\r\n    const plainCardRenderer = this.createInputJsxRenderer(options.renderPlainCard);\r\n\r\n    return Object.assign(\r\n      {},\r\n      sharedProperties,\r\n      plainCardRenderer &&\r\n      ({ onRenderPlainCard: data => plainCardRenderer({ data }) } as Pick<IPlainCardProps, 'onRenderPlainCard'>)\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Counterpart of `IExpandingCardProps`, with Angular adjustments.\r\n */\r\nexport interface IExpandingCardOptions\r\n  extends Omit<IExpandingCardProps, 'onRenderCompactCard' | 'onRenderExpandedCard'> {\r\n  readonly renderCompactCard?: InputRendererOptions<RenderCardContext<IExpandingCardProps>>;\r\n  readonly renderExpandedCard?: InputRendererOptions<RenderCardContext<IExpandingCardProps>>;\r\n}\r\n\r\nexport interface IPlainCardOptions extends Omit<IPlainCardProps, 'onRenderPlainCard'> {\r\n  readonly renderPlainCard?: InputRendererOptions<RenderCardContext<IPlainCardProps>>;\r\n}\r\n\r\nexport interface RenderCardContext<T = any> {\r\n  readonly data: T;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { InputRendererOptions, ReactWrapperComponent, JsxRenderFunc } from '@angular-react/core';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  Renderer2,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport { IPlainCardProps } from 'office-ui-fabric-react/lib/HoverCard';\r\n\r\n@Component({\r\n  selector: 'fab-plain-card',\r\n  exportAs: 'fabPlainCard',\r\n  template: `\r\n    <PlainCard\r\n      [componentRef]=\"componentRef\"\r\n      [className]=\"className\"\r\n      [directionalHint]=\"directionalHint\"\r\n      [directionalHintFixed]=\"directionalHintFixed\"\r\n      [firstFocus]=\"firstFocus\"\r\n      [gapSpace]=\"gapSpace\"\r\n      [renderData]=\"renderData\"\r\n      [styles]=\"styles\"\r\n      [targetElement]=\"targetElement\"\r\n      [theme]=\"theme\"\r\n      [trapFocus]=\"trapFocus\"\r\n      [RenderPlainCard]=\"renderPlainCard && onRenderPlainCard\"\r\n      (onEnter)=\"onEnter.emit()\"\r\n      (onLeave)=\"onLeave.emit()\"\r\n    >\r\n      <ReactContent><ng-content></ng-content></ReactContent>\r\n    </PlainCard>\r\n  `,\r\n  styles: ['react-renderer'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FabPlainCardComponent extends ReactWrapperComponent<IPlainCardProps> implements OnInit {\r\n  @ViewChild('reactNode', { static: false }) protected reactNodeRef: ElementRef;\r\n\r\n  @Input() componentRef: IPlainCardProps['componentRef'];\r\n  @Input() className: IPlainCardProps['className'];\r\n  @Input() directionalHint: IPlainCardProps['directionalHint'];\r\n  @Input() directionalHintFixed: IPlainCardProps['directionalHintFixed'];\r\n  @Input() firstFocus: IPlainCardProps['firstFocus'];\r\n  @Input() gapSpace: IPlainCardProps['gapSpace'];\r\n  @Input() renderData: IPlainCardProps['renderData'];\r\n  @Input() styles: IPlainCardProps['styles'];\r\n  @Input() targetElement: IPlainCardProps['targetElement'];\r\n  @Input() theme: IPlainCardProps['theme'];\r\n  @Input() trapFocus: IPlainCardProps['trapFocus'];\r\n  @Input() renderPlainCard?: InputRendererOptions<IPlainCardProps>;\r\n\r\n  @Output() readonly onEnter = new EventEmitter<void>();\r\n  @Output() readonly onLeave = new EventEmitter<void>();\r\n\r\n  onRenderPlainCard: (props?: IPlainCardProps, defaultRender?: JsxRenderFunc<IPlainCardProps>) => JSX.Element;\r\n\r\n  constructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef, renderer: Renderer2, ngZone: NgZone) {\r\n    super(elementRef, changeDetectorRef, renderer, { ngZone });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onRenderPlainCard = this.createRenderPropHandler(this.renderPlainCard);\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { registerElement } from '@angular-react/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { ExpandingCard, HoverCard, PlainCard } from 'office-ui-fabric-react/lib/HoverCard';\r\nimport { FabHoverCardComponent } from './hover-card.component';\r\nimport { FabExpandingCardComponent } from './expanding-card.component';\r\nimport { FabPlainCardComponent } from './plain-card.component';\r\n\r\nconst components = [FabHoverCardComponent, FabExpandingCardComponent, FabPlainCardComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: components,\r\n  exports: components,\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n})\r\nexport class FabHoverCardModule {\r\n  constructor() {\r\n    // Add any React elements to the registry (used by the renderer).\r\n    registerElement('ExpandingCard', () => ExpandingCard);\r\n    registerElement('HoverCard', () => HoverCard);\r\n    registerElement('PlainCard', () => PlainCard);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}