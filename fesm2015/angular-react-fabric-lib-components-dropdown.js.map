{"version":3,"file":"angular-react-fabric-lib-components-dropdown.js","sources":["ng://@angular-react/fabric/lib/components/dropdown/directives/dropdown-option.directive.ts","ng://@angular-react/fabric/lib/components/dropdown/directives/dropdown-options.directive.ts","ng://@angular-react/fabric/lib/components/dropdown/dropdown.component.ts","ng://@angular-react/fabric/lib/components/dropdown/dropdown.module.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Directive, Input } from '@angular/core';\r\nimport { IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\n\r\n/**\r\n * Wrapper directive for creating a DropdownOption\r\n * @paramName optionKey Binds to React 'key' property.\r\n *                      Name change necessary because key is a reserved attribute in the wrapper component.\r\n */\r\n@Directive({ selector: 'fab-dropdown-option' })\r\nexport class DropdownOptionDirective {\r\n  @Input() optionKey: IDropdownOption['key'];\r\n  @Input() text: IDropdownOption['text'];\r\n  @Input() title?: IDropdownOption['title'];\r\n  @Input() itemType?: IDropdownOption['itemType'];\r\n  @Input() index?: IDropdownOption['index'];\r\n  @Input() ariaLabel?: IDropdownOption['ariaLabel'];\r\n  @Input() selected?: IDropdownOption['selected'];\r\n  @Input() disabled?: IDropdownOption['disabled'];\r\n  @Input() hidden?: IDropdownOption['hidden'];\r\n  @Input() data?: IDropdownOption['data'];\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { ContentChildren, Directive, QueryList } from '@angular/core';\r\n\r\nimport { DropdownOptionDirective } from './dropdown-option.directive';\r\nimport { IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\n\r\n/**\r\n * Wrapper directive for creating multiple DropdownOptions\r\n * Note that if you use this, it will override the imperative [options] binding.\r\n */\r\n@Directive({ selector: 'fab-dropdown > options' })\r\nexport class DropdownOptionsDirective {\r\n  @ContentChildren(DropdownOptionDirective) readonly directiveItems: QueryList<DropdownOptionDirective>;\r\n\r\n  get items() {\r\n    return this.directiveItems.map<IDropdownOption>(({ optionKey, ...otherDirectiveProps }) => ({\r\n      key: optionKey,\r\n      ...otherDirectiveProps\r\n    }));\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { InputRendererOptions, JsxRenderFunc, ReactWrapperComponent } from '@angular-react/core';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewChild,\r\n  Output,\r\n  EventEmitter,\r\n  ContentChild,\r\n  AfterContentInit,\r\n} from '@angular/core';\r\nimport { IDropdownProps, IDropdownOption, IDropdown } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { ISelectableDroppableTextProps, ISelectableOption } from 'office-ui-fabric-react/lib/SelectableOption';\r\nimport { DropdownOptionsDirective } from './directives/dropdown-options.directive';\r\n\r\n@Component({\r\n  selector: 'fab-dropdown',\r\n  exportAs: 'fabDropdown',\r\n  template: `\r\n    <Dropdown\r\n      #reactNode\r\n      [componentRef]=\"componentRef\"\r\n      [label]=\"label\"\r\n      [ariaLabel]=\"ariaLabel\"\r\n      [id]=\"id\"\r\n      [className]=\"className\"\r\n      [defaultSelectedKey]=\"defaultSelectedKey\"\r\n      [selectedKey]=\"selectedKey\"\r\n      [disabled]=\"disabled\"\r\n      [required]=\"required\"\r\n      [calloutProps]=\"calloutProps\"\r\n      [panelProps]=\"panelProps\"\r\n      [errorMessage]=\"errorMessage\"\r\n      [placeholder]=\"placeholder\"\r\n      [openOnKeyboardFocus]=\"openOnKeyboardFocus\"\r\n      [options]=\"options\"\r\n      [dropdownWidth]=\"dropdownWidth\"\r\n      [responsiveMode]=\"responsiveMode\"\r\n      [multiSelect]=\"multiSelect\"\r\n      [defaultSelectedKeys]=\"defaultSelectedKeys\"\r\n      [selectedKeys]=\"selectedKeys\"\r\n      [multiSelectDelimiter]=\"multiSelectDelimiter\"\r\n      [notifyOnReselect]=\"notifyOnReselect\"\r\n      [keytipProps]=\"keytipProps\"\r\n      [theme]=\"theme\"\r\n      [styles]=\"styles\"\r\n      [RenderContainer]=\"renderContainer && onRenderContainer\"\r\n      [RenderList]=\"renderList && onRenderList\"\r\n      [RenderItem]=\"renderItem && onRenderItem\"\r\n      [RenderOption]=\"renderOption && onRenderOption\"\r\n      [RenderPlaceholder]=\"renderPlaceholder && onRenderPlaceholder\"\r\n      [RenderPlaceHolder]=\"renderPlaceHolder && onRenderPlaceHolder\"\r\n      [RenderTitle]=\"renderTitle && onRenderTitle\"\r\n      [RenderCaretDown]=\"renderCaretDown && onRenderCaretDown\"\r\n      [Change]=\"onChangeHandler\"\r\n      [Dismiss]=\"onDismissHandler\"\r\n    ></Dropdown>\r\n  `,\r\n  styles: ['react-renderer'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FabDropdownComponent extends ReactWrapperComponent<IDropdownProps> implements OnInit, AfterContentInit {\r\n  @ViewChild('reactNode', { static: true }) protected reactNodeRef: ElementRef;\r\n  @ContentChild(DropdownOptionsDirective, { static: true }) readonly dropdownOptionsDirective?: DropdownOptionsDirective;\r\n\r\n  @Input() componentRef?: IDropdownProps['componentRef'];\r\n  @Input() label?: IDropdownProps['label'];\r\n  @Input() ariaLabel?: IDropdownProps['ariaLabel'];\r\n  @Input() id?: IDropdownProps['id'];\r\n  @Input() className?: IDropdownProps['className'];\r\n  @Input() defaultSelectedKey?: IDropdownProps['defaultSelectedKey'];\r\n  @Input() selectedKey?: IDropdownProps['selectedKey'];\r\n  @Input() disabled?: IDropdownProps['disabled'];\r\n  @Input() required?: IDropdownProps['required'];\r\n  @Input() calloutProps?: IDropdownProps['calloutProps'];\r\n  @Input() panelProps?: IDropdownProps['panelProps'];\r\n  @Input() errorMessage?: IDropdownProps['errorMessage'];\r\n  @Input() placeholder?: IDropdownProps['placeholder'];\r\n  @Input() openOnKeyboardFocus?: IDropdownProps['openOnKeyboardFocus'];\r\n\r\n  @Input() options: IDropdownProps['options'];\r\n  @Input() dropdownWidth?: IDropdownProps['dropdownWidth'];\r\n  @Input() responsiveMode?: IDropdownProps['responsiveMode'];\r\n  @Input() multiSelect?: IDropdownProps['multiSelect'];\r\n  @Input() defaultSelectedKeys?: IDropdownProps['defaultSelectedKeys'];\r\n  @Input() selectedKeys?: IDropdownProps['selectedKeys'];\r\n  @Input() multiSelectDelimiter?: IDropdownProps['multiSelectDelimiter'];\r\n  @Input() notifyOnReselect?: IDropdownProps['notifyOnReselect'];\r\n  @Input() keytipProps?: IDropdownProps['keytipProps'];\r\n  @Input() theme?: IDropdownProps['theme'];\r\n  @Input() styles?: IDropdownProps['styles'];\r\n\r\n  @Input() renderContainer?: InputRendererOptions<ISelectableDroppableTextProps<IDropdown, IDropdown>>;\r\n  @Input() renderList?: InputRendererOptions<ISelectableDroppableTextProps<IDropdown, IDropdown>>;\r\n  @Input() renderItem?: InputRendererOptions<ISelectableOption>;\r\n  @Input() renderOption?: InputRendererOptions<ISelectableOption>;\r\n  @Input() renderPlaceholder?: InputRendererOptions<IDropdownProps>;\r\n  @Input() renderPlaceHolder?: InputRendererOptions<IDropdownProps>;\r\n  @Input() renderTitle?: InputRendererOptions<IDropdownOption | IDropdownOption[]>;\r\n  @Input() renderCaretDown?: InputRendererOptions<IDropdownProps>;\r\n\r\n  @Output() readonly onChange = new EventEmitter<{ event: Event; option?: IDropdownOption; index?: number }>();\r\n  @Output() readonly onDismiss = new EventEmitter<void>();\r\n\r\n  onRenderContainer: (\r\n    props?: ISelectableDroppableTextProps<IDropdown, IDropdown>,\r\n    defaultRender?: JsxRenderFunc<ISelectableDroppableTextProps<IDropdown, IDropdown>>\r\n  ) => JSX.Element;\r\n  onRenderList: (\r\n    props?: ISelectableDroppableTextProps<IDropdown, IDropdown>,\r\n    defaultRender?: JsxRenderFunc<ISelectableDroppableTextProps<IDropdown, IDropdown>>\r\n  ) => JSX.Element;\r\n  onRenderItem: (props?: ISelectableOption, defaultRender?: JsxRenderFunc<ISelectableOption>) => JSX.Element;\r\n  onRenderOption: (props?: ISelectableOption, defaultRender?: JsxRenderFunc<ISelectableOption>) => JSX.Element;\r\n  onRenderPlaceholder: (props?: IDropdownProps, defaultRender?: JsxRenderFunc<IDropdownProps>) => JSX.Element;\r\n  onRenderPlaceHolder: (props?: IDropdownProps, defaultRender?: JsxRenderFunc<IDropdownProps>) => JSX.Element;\r\n  onRenderTitle: (\r\n    props?: IDropdownOption | IDropdownOption[],\r\n    defaultRender?: JsxRenderFunc<IDropdownOption | IDropdownOption[]>\r\n  ) => JSX.Element;\r\n  onRenderCaretDown: (props?: IDropdownProps, defaultRender?: JsxRenderFunc<IDropdownProps>) => JSX.Element;\r\n\r\n  constructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef, renderer: Renderer2) {\r\n    super(elementRef, changeDetectorRef, renderer, { setHostDisplay: true });\r\n\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.onDismissHandler = this.onDismissHandler.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.onRenderContainer = this.createRenderPropHandler(this.renderContainer);\r\n    this.onRenderList = this.createRenderPropHandler(this.renderList);\r\n    this.onRenderItem = this.createRenderPropHandler(this.renderItem);\r\n    this.onRenderOption = this.createRenderPropHandler(this.renderOption);\r\n    this.onRenderPlaceholder = this.createRenderPropHandler(this.renderPlaceholder);\r\n    this.onRenderPlaceHolder = this.createRenderPropHandler(this.renderPlaceHolder);\r\n    this.onRenderTitle = this.createRenderPropHandler(this.renderTitle);\r\n    this.onRenderCaretDown = this.createRenderPropHandler(this.renderCaretDown);\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (this.dropdownOptionsDirective) {\r\n      this._initDirective(this.dropdownOptionsDirective);\r\n    }\r\n    super.ngAfterContentInit();\r\n  }\r\n\r\n  onChangeHandler(event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption, index?: number) {\r\n    this.onChange.emit({\r\n      event: event && event.nativeEvent,\r\n      option,\r\n      index,\r\n    });\r\n  }\r\n\r\n  onDismissHandler() {\r\n    this.onDismiss.emit();\r\n  }\r\n\r\n  private _initDirective(directive: DropdownOptionsDirective) {\r\n    this.options = directive.items;\r\n    this.markForCheck();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { registerElement } from '@angular-react/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { FabDropdownComponent } from './dropdown.component';\r\nimport { DropdownOptionDirective } from './directives/dropdown-option.directive';\r\nimport { DropdownOptionsDirective } from './directives/dropdown-options.directive';\r\n\r\nconst declarations = [\r\n  FabDropdownComponent,\r\n  DropdownOptionDirective,\r\n  DropdownOptionsDirective\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: declarations,\r\n  exports: declarations,\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n})\r\nexport class FabDropdownModule {\r\n  constructor() {\r\n    // Add any React elements to the registry (used by the renderer).\r\n    registerElement('Dropdown', () => Dropdown);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}