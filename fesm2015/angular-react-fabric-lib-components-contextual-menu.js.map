{"version":3,"file":"angular-react-fabric-lib-components-contextual-menu.js","sources":["ng://@angular-react/fabric/lib/components/contextual-menu/directives/contextual-menu-item.directive.ts","ng://@angular-react/fabric/lib/components/contextual-menu/contextual-menu.module.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {\r\n  AfterContentInit,\r\n  ContentChildren,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  ContentChild,\r\n  TemplateRef,\r\n  ElementRef,\r\n} from '@angular/core';\r\nimport { IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { KnownKeys, InputRendererOptions } from '@angular-react/core';\r\nimport { OnChanges } from 'angular-react-toolkit/declarations/angular/typed-changes';\r\nimport { ItemChangedPayload } from 'angular-react-toolkit/core/declarative/item-changed.payload';\r\nimport { ChangeableItemsHelper, IChangeableItemsContainer } from 'angular-react-toolkit/core/shared/changeable-helper';\r\nimport { ChangeableItemDirective } from 'angular-react-toolkit/core/shared/changeable-item.directive';\r\nimport { getDataAttributes } from 'angular-react-toolkit/utils/get-data-attributes';\r\n\r\nexport type ContextualMenuItemChangedPayload = ItemChangedPayload<\r\n  IContextualMenuItemOptions['key'],\r\n  IContextualMenuItemOptions\r\n>;\r\n\r\n/**\r\n * Wrapper directive to allow rendering a custom item to a ContextualMenuItem.\r\n */\r\n@Directive({ selector: 'fab-command-bar-item > render' })\r\nexport class ContextualMenuItemRenderDirective {\r\n  @ContentChild(TemplateRef, { static: false }) readonly templateRef: TemplateRef<IContextualMenuItemOptionsRenderContext>;\r\n}\r\n\r\n/**\r\n * Wrapper directive to allow rendering a custom icon to a ContextualMenuItem.\r\n */\r\n@Directive({ selector: 'fab-command-bar-item > render-icon' })\r\nexport class ContextualMenuItemRenderIconDirective {\r\n  @ContentChild(TemplateRef, { static: false }) readonly templateRef: TemplateRef<IContextualMenuItemOptionsRenderIconContext>;\r\n}\r\n\r\n@Directive({ selector: 'contextual-menu-item' })\r\nexport class ContextualMenuItemDirective extends ChangeableItemDirective<IContextualMenuItem>\r\n  implements\r\n    AfterContentInit,\r\n    IChangeableItemsContainer<IContextualMenuItem>,\r\n    IContextualMenuItem,\r\n    OnChanges<ContextualMenuItemDirective>,\r\n    OnDestroy {\r\n  @ContentChildren(ContextualMenuItemDirective) readonly menuItemsDirectives: QueryList<ContextualMenuItemDirective>;\r\n  @ContentChild(ContextualMenuItemRenderDirective, { static: false }) readonly renderDirective: ContextualMenuItemRenderDirective;\r\n  @ContentChild(ContextualMenuItemRenderIconDirective, { static: false })\r\n  readonly renderIconDirective: ContextualMenuItemRenderIconDirective;\r\n\r\n  @Input() componentRef?: IContextualMenuItem['componentRef'];\r\n  @Input() text?: IContextualMenuItem['text'];\r\n  @Input() secondaryText?: IContextualMenuItem['secondaryText'];\r\n  @Input() itemType?: IContextualMenuItem['itemType'];\r\n  @Input() iconProps?: IContextualMenuItem['iconProps'];\r\n  @Input() submenuIconProps?: IContextualMenuItem['submenuIconProps'];\r\n  @Input() disabled?: IContextualMenuItem['disabled'];\r\n  @Input() primaryDisabled?: IContextualMenuItem['primaryDisabled'];\r\n  @Input() shortCut?: IContextualMenuItem['shortCut'];\r\n  @Input() canCheck?: IContextualMenuItem['canCheck'];\r\n  @Input() checked?: IContextualMenuItem['checked'];\r\n  @Input() split?: IContextualMenuItem['split'];\r\n  @Input() data?: IContextualMenuItem['data'];\r\n  @Input() href?: IContextualMenuItem['href'];\r\n  @Input() target?: IContextualMenuItem['target'];\r\n  @Input() rel?: IContextualMenuItem['rel'];\r\n  @Input() subMenuProps?: IContextualMenuItem['subMenuProps'];\r\n  @Input() getItemClassNames?: IContextualMenuItem['getItemClassNames'];\r\n  @Input() itemProps?: IContextualMenuItem['itemProps'];\r\n  @Input() getSplitButtonVerticalDividerClassNames?: IContextualMenuItem['getSplitButtonVerticalDividerClassNames'];\r\n  @Input() sectionProps?: IContextualMenuItem['sectionProps'];\r\n  @Input() className?: IContextualMenuItem['className'];\r\n  @Input() style?: IContextualMenuItem['style'];\r\n  @Input() ariaLabel?: IContextualMenuItem['ariaLabel'];\r\n  @Input() title?: IContextualMenuItem['title'];\r\n  @Input() onMouseDown?: IContextualMenuItem['onMouseDown'];\r\n  @Input() role?: IContextualMenuItem['role'];\r\n  @Input() customOnRenderListLength?: IContextualMenuItem['customOnRenderListLength'];\r\n  @Input() keytipProps?: IContextualMenuItem['keytipProps'];\r\n  @Input() inactive?: IContextualMenuItem['inactive'];\r\n  @Input() name?: IContextualMenuItem['name'];\r\n  @Input() render: IContextualMenuItemOptions['render'];\r\n  @Input() renderIcon: IContextualMenuItemOptions['renderIcon'];\r\n\r\n  @Output() readonly click = new EventEmitter<{ ev?: MouseEvent | KeyboardEvent; item?: IContextualMenuItem }>();\r\n\r\n  @Output()\r\n  get onChildItemChanged(): EventEmitter<ItemChangedPayload<string, IContextualMenuItem>> {\r\n    return this._changeableItemsHelper && this._changeableItemsHelper.onChildItemChanged;\r\n  }\r\n\r\n  @Output()\r\n  get onItemsChanged(): EventEmitter<QueryList<ChangeableItemDirective<IContextualMenuItem>>> {\r\n    return this._changeableItemsHelper && this._changeableItemsHelper.onItemsChanged;\r\n  }\r\n\r\n  constructor(readonly elementRef: ElementRef<HTMLElement>) {\r\n    super();\r\n  }\r\n\r\n  private _changeableItemsHelper: ChangeableItemsHelper<IContextualMenuItem>;\r\n\r\n  ngAfterContentInit() {\r\n    if (this.renderDirective && this.renderDirective.templateRef) {\r\n      this.render = this.renderDirective.templateRef;\r\n    }\r\n\r\n    if (this.renderIconDirective && this.renderIconDirective.templateRef) {\r\n      this.renderIcon = this.renderIconDirective.templateRef;\r\n    }\r\n\r\n    this._changeableItemsHelper = new ChangeableItemsHelper(this.menuItemsDirectives, this, nonSelfDirective => {\r\n      const items = nonSelfDirective.map(directive => this._directiveToContextualMenuItem(directive as any));\r\n      if (!this.subMenuProps) {\r\n        this.subMenuProps = { items: items };\r\n      } else {\r\n        this.subMenuProps.items = items;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._changeableItemsHelper.destroy();\r\n  }\r\n\r\n  private _directiveToContextualMenuItem(directive: ContextualMenuItemDirective): IContextualMenuItem {\r\n    return {\r\n      ...directive,\r\n      ...getDataAttributes(directive.elementRef.nativeElement, true),\r\n      onClick: (ev, item) => {\r\n        directive.click.emit({ ev: ev && ev.nativeEvent, item: item });\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\n// Not using `Omit` here since it confused the TypeScript compiler and it just showed the properties listed here (`renderIcon`, `render` and `data`).\r\n// The type here is just `Omit` without the generics though.\r\nexport interface IContextualMenuItemOptions<TData = any>\r\n  extends Pick<IContextualMenuItem, Exclude<KnownKeys<IContextualMenuItem>, 'onRender' | 'onRenderIcon'>> {\r\n  readonly renderIcon?: InputRendererOptions<IContextualMenuItemOptionsRenderIconContext>;\r\n  readonly render?: InputRendererOptions<IContextualMenuItemOptionsRenderContext>;\r\n  readonly data?: TData;\r\n\r\n  /**\r\n   * For any attributes like data-* etc.\r\n   */\r\n  [propertyName: string]: any;\r\n}\r\n\r\nexport interface IContextualMenuItemOptionsRenderContext {\r\n  item: any;\r\n  dismissMenu: (ev?: any, dismissAll?: boolean) => void;\r\n}\r\n\r\nexport interface IContextualMenuItemOptionsRenderIconContext {\r\n  contextualMenuItem: IContextualMenuItem;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport {\r\n  ContextualMenuItemDirective,\r\n  ContextualMenuItemRenderDirective,\r\n  ContextualMenuItemRenderIconDirective,\r\n} from './directives/contextual-menu-item.directive';\r\n\r\nconst components = [\r\n  ContextualMenuItemDirective,\r\n  ContextualMenuItemRenderDirective,\r\n  ContextualMenuItemRenderIconDirective,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: components,\r\n  exports: components,\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n})\r\nexport class FabContextualMenuModule {}\r\n"],"names":[],"mappings":"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"}