!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular-react/core"),require("@angular/common"),require("office-ui-fabric-react/lib/ComboBox")):"function"==typeof define&&define.amd?define("@angular-react/fabric/lib/components/combo-box",["exports","@angular/core","@angular-react/core","@angular/common","office-ui-fabric-react/lib/ComboBox"],t):t(((e=e||self)["angular-react"]=e["angular-react"]||{},e["angular-react"].fabric=e["angular-react"].fabric||{},e["angular-react"].fabric.lib=e["angular-react"].fabric.lib||{},e["angular-react"].fabric.lib.components=e["angular-react"].fabric.lib.components||{},e["angular-react"].fabric.lib.components["combo-box"]={}),e.ng.core,e.core$1,e.ng.common,e.ComboBox)}(this,(function(e,t,n,o,r){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function a(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var p=function(){return(p=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};var s=function(){function e(){}return e.decorators=[{type:t.Directive,args:[{selector:"fab-combo-box-option"}]}],e.propDecorators={optionKey:[{type:t.Input}],text:[{type:t.Input}],title:[{type:t.Input}],itemType:[{type:t.Input}],index:[{type:t.Input}],ariaLabel:[{type:t.Input}],selected:[{type:t.Input}],disabled:[{type:t.Input}],data:[{type:t.Input}],styles:[{type:t.Input}],useAriaLabelAsText:[{type:t.Input}]},e}();var u=function(){function e(){}return Object.defineProperty(e.prototype,"items",{get:function(){return this.directiveItems.map((function(e){var t=e.optionKey,n=function(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.indexOf(o)<0&&(n[o]=e[o]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(e);r<o.length;r++)t.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(e,o[r])&&(n[o[r]]=e[o[r]])}return n}(e,["optionKey"]);return p({key:t},n)}))},enumerable:!0,configurable:!0}),e.decorators=[{type:t.Directive,args:[{selector:"fab-combo-box > options"}]}],e.propDecorators={directiveItems:[{type:t.ContentChildren,args:[s]}]},e}();var l=function(e){function n(n,o,r,i){var a=e.call(this,n,o,r,{ngZone:i})||this;return a.onItemClick=new t.EventEmitter,a.onChange=new t.EventEmitter,a.onPendingValueChanged=new t.EventEmitter,a.onMenuOpen=new t.EventEmitter,a.onMenuDismissed=new t.EventEmitter,a.onMenuDismiss=new t.EventEmitter,a.onScrollToItem=new t.EventEmitter,a.onItemClickHandler=a.onItemClickHandler.bind(a),a.onChangeHandler=a.onChangeHandler.bind(a),a.onPendingValueChangedHandler=a.onPendingValueChangedHandler.bind(a),a.onScrollToItemHandler=a.onScrollToItemHandler.bind(a),a}return a(n,e),n.prototype.ngOnInit=function(){this.onRenderLowerContent=this.createRenderPropHandler(this.renderLowerContent)},n.prototype.ngAfterContentInit=function(){this.comboBoxOptionsDirective&&this._initDirective(this.comboBoxOptionsDirective),e.prototype.ngAfterContentInit.call(this)},n.prototype.onItemClickHandler=function(e,t,n){this.onItemClick.emit({event:e.nativeEvent,option:t,index:n})},n.prototype.onChangeHandler=function(e,t,n,o){this.onChange.emit({event:e.nativeEvent,option:t,index:n,value:o})},n.prototype.onPendingValueChangedHandler=function(e,t,n){this.onPendingValueChanged.emit({option:e,index:t,value:n})},n.prototype.onScrollToItemHandler=function(e){this.onScrollToItem.emit({itemIndex:e})},n.prototype._initDirective=function(e){this.options=e.items,this.markForCheck()},n.propDecorators={componentRef:[{type:t.Input}],options:[{type:t.Input}],allowFreeform:[{type:t.Input}],autoComplete:[{type:t.Input}],text:[{type:t.Input}],buttonIconProps:[{type:t.Input}],autofill:[{type:t.Input}],theme:[{type:t.Input}],styles:[{type:t.Input}],getClassNames:[{type:t.Input}],caretDownButtonStyles:[{type:t.Input}],comboBoxOptionStyles:[{type:t.Input}],scrollSelectedToTop:[{type:t.Input}],dropdownWidth:[{type:t.Input}],useComboBoxAsMenuWidth:[{type:t.Input}],multiSelect:[{type:t.Input}],isButtonAriaHidden:[{type:t.Input}],ariaDescribedBy:[{type:t.Input}],keytipProps:[{type:t.Input}],persistMenu:[{type:t.Input}],shouldRestoreFocus:[{type:t.Input}],resolveOptions:[{type:t.Input}],renderLowerContent:[{type:t.Input}],onItemClick:[{type:t.Output}],onChange:[{type:t.Output}],onPendingValueChanged:[{type:t.Output}],onMenuOpen:[{type:t.Output}],onMenuDismissed:[{type:t.Output}],onMenuDismiss:[{type:t.Output}],onScrollToItem:[{type:t.Output}],comboBoxOptionsDirective:[{type:t.ContentChild,args:[u,{static:!0}]}]},n}(n.ReactWrapperComponent);var c=function(e){function n(t,n,o,r){return e.call(this,t,n,o,r)||this}return a(n,e),n.decorators=[{type:t.Component,args:[{selector:"fab-combo-box",exportAs:"fabComboBox",template:'\n    <ComboBox\n      #reactNode\n      [componentRef]="componentRef"\n      [options]="options"\n      [allowFreeform]="allowFreeform"\n      [autoComplete]="autoComplete"\n      [text]="text"\n      [buttonIconProps]="buttonIconProps"\n      [autofill]="autofill"\n      [theme]="theme"\n      [styles]="styles"\n      [getClassNames]="getClassNames"\n      [caretDownButtonStyles]="caretDownButtonStyles"\n      [comboBoxOptionStyles]="comboBoxOptionStyles"\n      [scrollSelectedToTop]="scrollSelectedToTop"\n      [dropdownWidth]="dropdownWidth"\n      [useComboBoxAsMenuWidth]="useComboBoxAsMenuWidth"\n      [multiSelect]="multiSelect"\n      [isButtonAriaHidden]="isButtonAriaHidden"\n      [ariaDescribedBy]="ariaDescribedBy"\n      [keytipProps]="keytipProps"\n      [persistMenu]="persistMenu"\n      [shouldRestoreFocus]="shouldRestoreFocus"\n      [RenderLowerContent]="renderLowerContent && onRenderLowerContent"\n      [ItemClick]="onItemClickHandler"\n      [Change]="onChangeHandler"\n      [PendingValueChanged]="onPendingValueChangedHandler"\n      [ResolveOptions]="resolveOptions"\n      [ScrollToItem]="onScrollToItemHandler"\n      (onMenuOpen)="onMenuOpen.emit()"\n      (onMenuDismissed)="onMenuDismissed.emit()"\n      (onMenuDismiss)="onMenuDismiss.emit()"\n    >\n    </ComboBox>\n  ',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:["react-renderer"]}]}],n.ctorParameters=function(){return[{type:t.ElementRef},{type:t.ChangeDetectorRef},{type:t.Renderer2},{type:t.NgZone}]},n.propDecorators={reactNodeRef:[{type:t.ViewChild,args:["reactNode",{static:!0}]}]},n}(l);var d=function(e){function n(t,n,o,r){return e.call(this,t,n,o,r)||this}return a(n,e),n.decorators=[{type:t.Component,args:[{selector:"fab-virtualized-combo-box",exportAs:"fabVirtualizedComboBox",template:'\n    <VirtualizedComboBox\n      #reactNode\n      [componentRef]="componentRef"\n      [options]="options"\n      [allowFreeform]="allowFreeform"\n      [autoComplete]="autoComplete"\n      [text]="text"\n      [buttonIconProps]="buttonIconProps"\n      [autofill]="autofill"\n      [theme]="theme"\n      [styles]="styles"\n      [getClassNames]="getClassNames"\n      [caretDownButtonStyles]="caretDownButtonStyles"\n      [comboBoxOptionStyles]="comboBoxOptionStyles"\n      [scrollSelectedToTop]="scrollSelectedToTop"\n      [dropdownWidth]="dropdownWidth"\n      [useComboBoxAsMenuWidth]="useComboBoxAsMenuWidth"\n      [multiSelect]="multiSelect"\n      [isButtonAriaHidden]="isButtonAriaHidden"\n      [ariaDescribedBy]="ariaDescribedBy"\n      [keytipProps]="keytipProps"\n      [persistMenu]="persistMenu"\n      [shouldRestoreFocus]="shouldRestoreFocus"\n      [RenderLowerContent]="renderLowerContent && onRenderLowerContent"\n      [ItemClick]="onItemClickHandler"\n      [Change]="onChangeHandler"\n      [PendingValueChanged]="onPendingValueChangedHandler"\n      [ResolveOptions]="resolveOptions"\n      [ScrollToItem]="onScrollToItemHandler"\n      (onMenuOpen)="onMenuOpen.emit()"\n      (onMenuDismissed)="onMenuDismissed.emit()"\n      (onMenuDismiss)="onMenuDismiss.emit()"\n    >\n    </VirtualizedComboBox>\n  ',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:["react-renderer"]}]}],n.ctorParameters=function(){return[{type:t.ElementRef},{type:t.ChangeDetectorRef},{type:t.Renderer2},{type:t.NgZone}]},n.propDecorators={reactNodeRef:[{type:t.ViewChild,args:["reactNode",{static:!0}]}]},n}(l);var m=[c,d,s,u],y=function(){function e(){n.registerElement("ComboBox",(function(){return r.ComboBox})),n.registerElement("VirtualizedComboBox",(function(){return r.VirtualizedComboBox}))}return e.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule],declarations:m,exports:m,schemas:[t.NO_ERRORS_SCHEMA]}]}],e.ctorParameters=function(){return[]},e}();e.FabComboBoxComponent=c,e.FabComboBoxModule=y,e.ɵa=l,e.ɵb=u,e.ɵc=s,e.ɵd=d,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-react-fabric-lib-components-combo-box.umd.min.js.map