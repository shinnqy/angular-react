!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular-react/core"),require("@angular/core"),require("@angular/common"),require("office-ui-fabric-react/lib/SpinButton")):"function"==typeof define&&define.amd?define("@angular-react/fabric/lib/components/spin-button",["exports","@angular-react/core","@angular/core","@angular/common","office-ui-fabric-react/lib/SpinButton"],t):t(((e=e||self)["angular-react"]=e["angular-react"]||{},e["angular-react"].fabric=e["angular-react"].fabric||{},e["angular-react"].fabric.lib=e["angular-react"].fabric.lib||{},e["angular-react"].fabric.lib.components=e["angular-react"].fabric.lib.components||{},e["angular-react"].fabric.lib.components["spin-button"]={}),e.core,e.ng.core,e.ng.common,e.SpinButton)}(this,(function(e,t,n,r,a){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};var i=function(e){function t(t,r,a){var o=e.call(this,t,r,a)||this;return o.onFocus=new n.EventEmitter,o.onBlur=new n.EventEmitter,o}return function(e,t){function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(t,e),t.decorators=[{type:n.Component,args:[{selector:"fab-spin-button",exportAs:"fabSpinButton",template:'\n    <SpinButton\n      #reactNode\n      [componentRef]="componentRef"\n      [defaultValue]="defaultValue"\n      [value]="value"\n      [min]="min"\n      [max]="max"\n      [step]="step"\n      [ariaLabel]="ariaLabel"\n      [ariaDescribedBy]="ariaDescribedBy"\n      [title]="title"\n      [disabled]="disabled"\n      [className]="className"\n      [label]="label"\n      [labelPosition]="labelPosition"\n      [iconProps]="iconProps"\n      [incrementButtonIcon]="incrementButtonIcon"\n      [decrementButtonIcon]="decrementButtonIcon"\n      [styles]="styles"\n      [getClassNames]="getClassNames"\n      [upArrowButtonStyles]="upArrowButtonStyles"\n      [downArrowButtonStyles]="downArrowButtonStyles"\n      [theme]="theme"\n      [incrementButtonAriaLabel]="incrementButtonAriaLabel"\n      [decrementButtonAriaLabel]="decrementButtonAriaLabel"\n      [precision]="precision"\n      [ariaPositionInSet]="ariaPositionInSet"\n      [ariaSetSize]="ariaSetSize"\n      [ariaValueNow]="ariaValueNow"\n      [ariaValueText]="ariaValueText"\n      [keytipProps]="keytipProps"\n      [Validate]="validate"\n      [Increment]="increment"\n      [Decrement]="decrement"\n      (onFocus)="onFocus.emit($event)"\n      (onBlur)="onBlur.emit($event)"\n    >\n    </SpinButton>\n  ',changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["react-renderer"]}]}],t.ctorParameters=function(){return[{type:n.ElementRef},{type:n.ChangeDetectorRef},{type:n.Renderer2}]},t.propDecorators={reactNodeRef:[{type:n.ViewChild,args:["reactNode",{static:!0}]}],componentRef:[{type:n.Input}],defaultValue:[{type:n.Input}],value:[{type:n.Input}],min:[{type:n.Input}],max:[{type:n.Input}],step:[{type:n.Input}],ariaLabel:[{type:n.Input}],ariaDescribedBy:[{type:n.Input}],title:[{type:n.Input}],disabled:[{type:n.Input}],className:[{type:n.Input}],label:[{type:n.Input}],labelPosition:[{type:n.Input}],iconProps:[{type:n.Input}],incrementButtonIcon:[{type:n.Input}],decrementButtonIcon:[{type:n.Input}],styles:[{type:n.Input}],getClassNames:[{type:n.Input}],upArrowButtonStyles:[{type:n.Input}],downArrowButtonStyles:[{type:n.Input}],theme:[{type:n.Input}],incrementButtonAriaLabel:[{type:n.Input}],decrementButtonAriaLabel:[{type:n.Input}],precision:[{type:n.Input}],ariaPositionInSet:[{type:n.Input}],ariaSetSize:[{type:n.Input}],ariaValueNow:[{type:n.Input}],ariaValueText:[{type:n.Input}],keytipProps:[{type:n.Input}],validate:[{type:n.Input}],increment:[{type:n.Input}],decrement:[{type:n.Input}],onFocus:[{type:n.Output}],onBlur:[{type:n.Output}]},t}(t.ReactWrapperComponent);var u=[i],p=function(){function e(){t.registerElement("SpinButton",(function(){return a.SpinButton}))}return e.decorators=[{type:n.NgModule,args:[{imports:[r.CommonModule],declarations:u,exports:u,schemas:[n.NO_ERRORS_SCHEMA]}]}],e.ctorParameters=function(){return[]},e}();e.FabSpinButtonComponent=i,e.FabSpinButtonModule=p,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-react-fabric-lib-components-spin-button.umd.min.js.map