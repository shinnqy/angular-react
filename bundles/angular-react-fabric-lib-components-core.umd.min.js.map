{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@angular-react/fabric/lib/components/core/shared/changeable-helper.ts","ng://@angular-react/fabric/lib/components/core/shared/changeable-item.directive.ts","ng://@angular-react/fabric/lib/components/core/shared/changeable-items.directive.ts","ng://@angular-react/fabric/lib/components/core/declarative/item-changed.helpers.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","ChangeableItemHelper","key","this","onItemChanged","EventEmitter","prototype","emitChanges","changes","emit","ChangeableItemsHelper","directiveItems","self","nonSelfHandler","_this","onChildItemChanged","onItemsChanged","_subscriptionsMap","_subscribeNewDirectives","_changeSubscription","subscribe","newValues","destroy","Object","values","forEach","unsubscribe","_handleNonSelfDirectives","directiveItem","nonSelfDirectives","filter","length","ChangeableItemDirective","defineProperty","changeableItemHelper","ngOnInit","ngOnChanges","Input","Output","ChangeableItemsDirective","changeableItemsHelper","ngAfterContentInit","ngOnDestroy","ContentChildren","args","target","itemChangesOverrides","entries","reduce","acc","_a","_c","propertyKey","change","assign","_b","currentValue"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { EventEmitter, QueryList } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ItemChangedPayload, ItemChanges } from '../declarative/item-changed.payload';\r\nimport { ChangeableItemDirective } from './changeable-item.directive';\r\n\r\n/**\r\n * Helper class for single changeable item\r\n */\r\nexport class ChangeableItemHelper<TItem> {\r\n  readonly onItemChanged = new EventEmitter<ItemChangedPayload<string, TItem>>();\r\n\r\n  constructor(private readonly key: string) {}\r\n\r\n  /**\r\n   * Action to be called by user of class when change is detected\r\n   * (Typically called in ngOnChanges)\r\n   * @param changes TypedChanges that are to be emitted\r\n   */\r\n  emitChanges(changes: ItemChanges<TItem>) {\r\n    this.onItemChanged.emit({ key: this.key, changes });\r\n  }\r\n}\r\n\r\n/**\r\n * Parent class for wrapper directive for multiple ChangeableItemDirectives\r\n */\r\nexport class ChangeableItemsHelper<TItem> {\r\n  readonly onChildItemChanged = new EventEmitter<ItemChangedPayload<string, TItem>>();\r\n  readonly onItemsChanged = new EventEmitter<QueryList<ChangeableItemDirective<TItem>>>();\r\n\r\n  private readonly _subscriptionsMap: { [key: string]: Subscription } = {};\r\n  private _changeSubscription: Subscription;\r\n\r\n  /**\r\n   * Initialize subscriptions to watch for changes to children ChangeableItemDirectives\r\n   * (Typically called in ngAfterContentInit after @ContentChildren are initialized)\r\n   * @param directiveItems List of children to watch for\r\n   * @param self Reference to component using this helper. This component gets filtered out in case\r\n   *  it appears in the list of children (i.e. when a component has children of its own type)\r\n   * @param nonSelfHandler Callback to handle filtered list of children when updated\r\n   */\r\n  constructor(\r\n    private directiveItems: QueryList<ChangeableItemDirective<TItem>>,\r\n    private self?: IChangeableItemsContainer<TItem>,\r\n    private nonSelfHandler?: (nonSelfDirectives: ChangeableItemDirective<TItem>[]) => void\r\n  ) {\r\n    this._subscribeNewDirectives();\r\n    this._changeSubscription = this.directiveItems.changes.subscribe(newValues => {\r\n      this.onItemsChanged.emit(newValues);\r\n      this._subscribeNewDirectives();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Action to be called by user of class when directive/component is destroyed\r\n   * (Typically called in ngOnDestroy)\r\n   */\r\n  destroy() {\r\n    Object.values(this._subscriptionsMap).forEach(value => value.unsubscribe());\r\n    this._changeSubscription.unsubscribe();\r\n  }\r\n\r\n  private _subscribeNewDirectives() {\r\n    const nonSelfDirectives = this._handleNonSelfDirectives();\r\n    nonSelfDirectives.forEach(directiveItem => {\r\n      if (this._subscriptionsMap[directiveItem.key]) {\r\n        this._subscriptionsMap[directiveItem.key].unsubscribe();\r\n      }\r\n      this._subscriptionsMap[directiveItem.key] = directiveItem.onItemChanged.subscribe(changes => {\r\n        this._handleNonSelfDirectives();\r\n        this.onChildItemChanged.emit(changes);\r\n        if (this.self && this.self.onItemChanged) {\r\n          this.self.onItemChanged.emit(changes);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private _handleNonSelfDirectives() {\r\n    const nonSelfDirectives = this.directiveItems.filter(directiveItem => directiveItem !== (this.self as any));\r\n    if (this.nonSelfHandler && nonSelfDirectives.length) {\r\n      this.nonSelfHandler(nonSelfDirectives);\r\n    }\r\n    return nonSelfDirectives;\r\n  }\r\n}\r\n\r\n/**\r\n * Interface for directives that contain changeable items\r\n */\r\nexport interface IChangeableItemsContainer<TItem> {\r\n  onChildItemChanged: EventEmitter<ItemChangedPayload<string, TItem>>;\r\n  onItemChanged?: EventEmitter<ItemChangedPayload<string, TItem>>;\r\n  onItemsChanged: EventEmitter<QueryList<ChangeableItemDirective<TItem>>>;\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { OnChanges } from '@angular-react/fabric/lib/declarations';;\r\nimport { ItemChangedPayload, ItemChanges } from '../declarative/item-changed.payload';\r\nimport { ChangeableItemHelper } from './changeable-helper';\r\n\r\n/**\r\n * Parent class for wrapper directive for single item with OnChanges\r\n */\r\nexport abstract class ChangeableItemDirective<TItem> implements OnChanges<ChangeableItemDirective<TItem>>, OnInit {\r\n  @Input() key: string;\r\n\r\n  @Output()\r\n  get onItemChanged(): EventEmitter<ItemChangedPayload<string, TItem>> {\r\n    return this.changeableItemHelper && this.changeableItemHelper.onItemChanged;\r\n  }\r\n\r\n  private changeableItemHelper: ChangeableItemHelper<TItem>;\r\n\r\n  ngOnInit() {\r\n    this.changeableItemHelper = new ChangeableItemHelper(this.key);\r\n  }\r\n\r\n  ngOnChanges(changes: ItemChanges<TItem>) {\r\n    if (this.changeableItemHelper) {\r\n      this.changeableItemHelper.emitChanges(changes);\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { AfterContentInit, ContentChildren, EventEmitter, OnDestroy, Output, QueryList } from '@angular/core';\r\n\r\nimport { ItemChangedPayload } from '../declarative/item-changed.payload';\r\nimport { ChangeableItemsHelper, IChangeableItemsContainer } from './changeable-helper';\r\nimport { ChangeableItemDirective } from './changeable-item.directive';\r\n\r\n/**\r\n * Parent class for wrapper directive for multiple ChangeableItemDirectives\r\n */\r\nexport abstract class ChangeableItemsDirective<TItem>\r\n  implements AfterContentInit, IChangeableItemsContainer<TItem>, OnDestroy {\r\n  @ContentChildren(ChangeableItemDirective) readonly directiveItems: QueryList<ChangeableItemDirective<TItem>>;\r\n\r\n  @Output()\r\n  get onChildItemChanged(): EventEmitter<ItemChangedPayload<string, TItem>> {\r\n    return this.changeableItemsHelper && this.changeableItemsHelper.onChildItemChanged;\r\n  }\r\n  @Output()\r\n  get onItemsChanged(): EventEmitter<QueryList<ChangeableItemDirective<TItem>>> {\r\n    return this.changeableItemsHelper && this.changeableItemsHelper.onItemsChanged;\r\n  }\r\n\r\n  private changeableItemsHelper: ChangeableItemsHelper<TItem>;\r\n\r\n  abstract get items(): TItem[];\r\n\r\n  ngAfterContentInit() {\r\n    this.changeableItemsHelper = new ChangeableItemsHelper(this.directiveItems);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.changeableItemsHelper.destroy();\r\n  }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { ItemChanges, PropertyChange } from './item-changed.payload';\r\n\r\nexport function mergeItemChanges<T extends object>(target: T, changes: ItemChanges<T>): T {\r\n  const itemChangesOverrides: Partial<T> = (Object.entries(changes) as Array<\r\n    [keyof T, PropertyChange<T[keyof T]>]\r\n  >).reduce((acc, [propertyKey, change]) => Object.assign(acc, { [propertyKey]: change.currentValue }), {});\r\n\r\n  return Object.assign({}, target, itemChangesOverrides);\r\n}\r\n"]}