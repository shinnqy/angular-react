!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular-react/core"),require("@angular-react/fabric/lib/components/core"),require("@angular-react/fabric/lib/utils"),require("@angular-react/fabric/lib/components/contextual-menu"),require("@angular/common"),require("office-ui-fabric-react/lib/Button")):"function"==typeof define&&define.amd?define("@angular-react/fabric/lib/components/button",["exports","@angular/core","@angular-react/core","@angular-react/fabric/lib/components/core","@angular-react/fabric/lib/utils","@angular-react/fabric/lib/components/contextual-menu","@angular/common","office-ui-fabric-react/lib/Button"],n):n(((e=e||self)["angular-react"]=e["angular-react"]||{},e["angular-react"].fabric=e["angular-react"].fabric||{},e["angular-react"].fabric.lib=e["angular-react"].fabric.lib||{},e["angular-react"].fabric.lib.components=e["angular-react"].fabric.lib.components||{},e["angular-react"].fabric.lib.components.button={}),e.ng.core,e.core$1,e["angular-react"].fabric.lib.components.core,e["angular-react"].fabric.lib.utils,e["angular-react"].fabric.lib.components["contextual-menu"],e.ng.common,e.Button)}(this,(function(e,n,t,r,o,a,i,s){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var c=function(e,n){return(c=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)};function u(e,n){function t(){this.constructor=e}c(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}var l=function(){return(l=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e}).apply(this,arguments)};var d=function(e){function t(t,r,o,a){var i=e.call(this,t,r,o,{ngZone:a,setHostDisplay:!0})||this;return i.onClick=new n.EventEmitter,i.onMenuClick=new n.EventEmitter,i.onAfterMenuDismiss=new n.EventEmitter,i._subscriptions=[],i.onMenuClickHandler=i.onMenuClickHandler.bind(i),i}return u(t,e),t.prototype.ngOnInit=function(){this.onRenderIcon=this.createRenderPropHandler(this.renderIcon),this.onRenderText=this.createRenderPropHandler(this.renderText),this.onRenderDescription=this.createRenderPropHandler(this.renderDescription),this.onRenderAriaDescription=this.createRenderPropHandler(this.renderAriaDescription),this.onRenderChildren=this.createRenderPropHandler(this.renderChildren),this.onRenderMenuIcon=this.createRenderPropHandler(this.renderMenuIcon)},t.prototype.ngAfterContentInit=function(){var n=this;if(this.menuItemsDirectives&&this.menuItemsDirectives.length>0){var t=function(e){var t=e.map((function(e){return n._transformContextualMenuItemOptionsToProps(n._directiveToContextualMenuItem(e))}));n.menuProps?n.menuProps.items=t:n.menuProps={items:t},n.markForCheck()};this._changeableItemsHelper=new r.ChangeableItemsHelper(this.menuItemsDirectives),this._subscriptions.push(this._changeableItemsHelper.onItemsChanged.subscribe((function(e){t(e.toArray())})),this._changeableItemsHelper.onChildItemChanged.subscribe((function(e){var o=e.key,a=e.changes,i=n.menuItemsDirectives.map((function(e){return e.key===o?r.mergeItemChanges(e,a):e}));t(i),n.markForCheck()}))),t(this.menuItemsDirectives.toArray())}e.prototype.ngAfterContentInit.call(this)},t.prototype.ngOnDestroy=function(){this._changeableItemsHelper&&this._changeableItemsHelper.destroy(),this._subscriptions&&this._subscriptions.forEach((function(e){return e.unsubscribe()}))},t.prototype.onMenuClickHandler=function(e,n){this.onMenuClick.emit({ev:e&&e.nativeEvent,button:n})},t.prototype.onClickHandler=function(e){this.onClick.emit(e.nativeEvent)},t.prototype._directiveToContextualMenuItem=function(e){return l({},o.omit(e,"menuItemsDirectives","renderDirective","renderIconDirective","click","onItemChanged","onItemsChanged","onChildItemChanged","ngOnInit","ngOnChanges","ngOnDestroy","ngAfterContentInit"),o.getDataAttributes(e.elementRef.nativeElement,!0),{onClick:function(n,t){e.click.emit({ev:n&&n.nativeEvent,item:t})}})},t.prototype._transformContextualMenuItemOptionsToProps=function(e){var n=o.omit(e,"renderIcon","render"),t=this.createInputJsxRenderer(e.renderIcon,{legacyRenderMode:!0}),r=this.createInputJsxRenderer(e.render);return Object.assign({},n,t&&{onRenderIcon:function(e){return t({contextualMenuItem:e})}},r&&{onRender:function(e,n){return r({item:e,dismissMenu:n})}})},t.propDecorators={componentRef:[{type:n.Input}],href:[{type:n.Input}],primary:[{type:n.Input}],uniqueId:[{type:n.Input}],disabled:[{type:n.Input}],allowDisabledFocus:[{type:n.Input}],primaryDisabled:[{type:n.Input}],styles:[{type:n.Input}],theme:[{type:n.Input}],checked:[{type:n.Input}],className:[{type:n.Input}],ariaLabel:[{type:n.Input}],ariaDescription:[{type:n.Input}],ariaHidden:[{type:n.Input}],ariaSelected:[{type:n.Input}],role:[{type:n.Input}],tabIndex:[{type:n.Input}],text:[{type:n.Input}],iconProps:[{type:n.Input}],menuProps:[{type:n.Input}],split:[{type:n.Input}],menuIconProps:[{type:n.Input}],splitButtonAriaLabel:[{type:n.Input}],menuAs:[{type:n.Input}],secondaryText:[{type:n.Input}],toggle:[{type:n.Input}],data:[{type:n.Input}],getClassNames:[{type:n.Input}],getSplitButtonClassNames:[{type:n.Input}],menuTriggerKeyCode:[{type:n.Input}],keytipProps:[{type:n.Input}],persistMenu:[{type:n.Input}],renderIcon:[{type:n.Input}],renderText:[{type:n.Input}],renderDescription:[{type:n.Input}],renderAriaDescription:[{type:n.Input}],renderChildren:[{type:n.Input}],renderMenuIcon:[{type:n.Input}],onClick:[{type:n.Output}],onMenuClick:[{type:n.Output}],onAfterMenuDismiss:[{type:n.Output}],menuItemsDirectives:[{type:n.ContentChildren,args:[a.ContextualMenuItemDirective]}]},t}(t.ReactWrapperComponent);var p=function(e){function t(n,t,r,o){return e.call(this,n,t,r,o)||this}return u(t,e),t.decorators=[{type:n.Component,args:[{selector:"fab-action-button",exportAs:"fabActionButton",template:'\n    <ActionButton\n      #reactNode\n      [componentRef]="componentRef"\n      [href]="href"\n      [primary]="primary"\n      [uniqueId]="uniqueId"\n      [disabled]="disabled"\n      [allowDisabledFocus]="allowDisabledFocus"\n      [primaryDisabled]="primaryDisabled"\n      [styles]="styles"\n      [theme]="theme"\n      [checked]="checked"\n      [className]="className"\n      [ariaLabel]="ariaLabel"\n      [ariaDescription]="ariaDescription"\n      [ariaHidden]="ariaHidden"\n      [aria-selected]="ariaSelected"\n      [role]="role"\n      [tabIndex]="tabIndex"\n      [text]="text"\n      [iconProps]="iconProps"\n      [menuProps]="menuProps"\n      [split]="split"\n      [menuIconProps]="menuIconProps"\n      [splitButtonAriaLabel]="splitButtonAriaLabel"\n      [menuAs]="menuAs"\n      [secondaryText]="secondaryText"\n      [toggle]="toggle"\n      [data]="data"\n      [getClassNames]="getClassNames"\n      [getSplitButtonClassNames]="getSplitButtonClassNames"\n      [menuTriggerKeyCode]="menuTriggerKeyCode"\n      [keytipProps]="keytipProps"\n      [persistMenu]="persistMenu"\n      [RenderIcon]="renderIcon && onRenderIcon"\n      [RenderText]="renderText && onRenderText"\n      [RenderDescription]="renderDescription && onRenderDescription"\n      [RenderAriaDescription]="renderAriaDescription && onRenderAriaDescription"\n      [RenderChildren]="renderChildren && onRenderChildren"\n      [RenderMenuIcon]="renderMenuIcon && onRenderMenuIcon"\n      [MenuClick]="onMenuClickHandler"\n      (onAfterMenuDismiss)="onAfterMenuDismiss.emit($event)"\n      (onClick)="onClickHandler($event)"\n    >\n      <ReactContent><ng-content></ng-content></ReactContent>\n    </ActionButton>\n  ',changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["react-renderer"]}]}],t.ctorParameters=function(){return[{type:n.ElementRef},{type:n.ChangeDetectorRef},{type:n.Renderer2},{type:n.NgZone}]},t.propDecorators={reactNodeRef:[{type:n.ViewChild,args:["reactNode",{static:!0}]}]},t}(d);var m=function(e){function t(n,t,r,o){return e.call(this,n,t,r,o)||this}return u(t,e),t.decorators=[{type:n.Component,args:[{selector:"fab-command-bar-button",exportAs:"fabCommandBarButton",template:'\n    <CommandBarButton\n      #reactNode\n      [componentRef]="componentRef"\n      [href]="href"\n      [primary]="primary"\n      [uniqueId]="uniqueId"\n      [disabled]="disabled"\n      [allowDisabledFocus]="allowDisabledFocus"\n      [primaryDisabled]="primaryDisabled"\n      [styles]="styles"\n      [theme]="theme"\n      [checked]="checked"\n      [className]="className"\n      [ariaLabel]="ariaLabel"\n      [ariaDescription]="ariaDescription"\n      [ariaHidden]="ariaHidden"\n      [aria-selected]="ariaSelected"\n      [role]="role"\n      [tabIndex]="tabIndex"\n      [text]="text"\n      [iconProps]="iconProps"\n      [menuProps]="menuProps"\n      [split]="split"\n      [menuIconProps]="menuIconProps"\n      [splitButtonAriaLabel]="splitButtonAriaLabel"\n      [menuAs]="menuAs"\n      [secondaryText]="secondaryText"\n      [toggle]="toggle"\n      [data]="data"\n      [getClassNames]="getClassNames"\n      [getSplitButtonClassNames]="getSplitButtonClassNames"\n      [menuTriggerKeyCode]="menuTriggerKeyCode"\n      [keytipProps]="keytipProps"\n      [persistMenu]="persistMenu"\n      [RenderIcon]="renderIcon && onRenderIcon"\n      [RenderText]="renderText && onRenderText"\n      [RenderDescription]="renderDescription && onRenderDescription"\n      [RenderAriaDescription]="renderAriaDescription && onRenderAriaDescription"\n      [RenderChildren]="renderChildren && onRenderChildren"\n      [RenderMenuIcon]="renderMenuIcon && onRenderMenuIcon"\n      [MenuClick]="onMenuClickHandler"\n      (onAfterMenuDismiss)="onAfterMenuDismiss.emit($event)"\n      (onClick)="onClickHandler($event)"\n    >\n      <ReactContent><ng-content></ng-content></ReactContent>\n    </CommandBarButton>\n  ',changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["react-renderer"]}]}],t.ctorParameters=function(){return[{type:n.ElementRef},{type:n.ChangeDetectorRef},{type:n.Renderer2},{type:n.NgZone}]},t.propDecorators={reactNodeRef:[{type:n.ViewChild,args:["reactNode",{static:!0}]}]},t}(d);var g=function(e){function t(n,t,r,o){return e.call(this,n,t,r,o)||this}return u(t,e),t.decorators=[{type:n.Component,args:[{selector:"fab-compound-button",exportAs:"fabCompoundButton",template:'\n    <CompoundButton\n      #reactNode\n      [componentRef]="componentRef"\n      [href]="href"\n      [primary]="primary"\n      [uniqueId]="uniqueId"\n      [disabled]="disabled"\n      [allowDisabledFocus]="allowDisabledFocus"\n      [primaryDisabled]="primaryDisabled"\n      [styles]="styles"\n      [theme]="theme"\n      [checked]="checked"\n      [className]="className"\n      [ariaLabel]="ariaLabel"\n      [ariaDescription]="ariaDescription"\n      [ariaHidden]="ariaHidden"\n      [aria-selected]="ariaSelected"\n      [role]="role"\n      [tabIndex]="tabIndex"\n      [text]="text"\n      [iconProps]="iconProps"\n      [menuProps]="menuProps"\n      [split]="split"\n      [menuIconProps]="menuIconProps"\n      [splitButtonAriaLabel]="splitButtonAriaLabel"\n      [menuAs]="menuAs"\n      [secondaryText]="secondaryText"\n      [toggle]="toggle"\n      [data]="data"\n      [getClassNames]="getClassNames"\n      [getSplitButtonClassNames]="getSplitButtonClassNames"\n      [menuTriggerKeyCode]="menuTriggerKeyCode"\n      [keytipProps]="keytipProps"\n      [persistMenu]="persistMenu"\n      [RenderIcon]="renderIcon && onRenderIcon"\n      [RenderText]="renderText && onRenderText"\n      [RenderDescription]="renderDescription && onRenderDescription"\n      [RenderAriaDescription]="renderAriaDescription && onRenderAriaDescription"\n      [RenderChildren]="renderChildren && onRenderChildren"\n      [RenderMenuIcon]="renderMenuIcon && onRenderMenuIcon"\n      [MenuClick]="onMenuClickHandler"\n      (onAfterMenuDismiss)="onAfterMenuDismiss.emit($event)"\n      (onClick)="onClickHandler($event)"\n    >\n      <ReactContent><ng-content></ng-content></ReactContent>\n    </CompoundButton>\n  ',changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["react-renderer"]}]}],t.ctorParameters=function(){return[{type:n.ElementRef},{type:n.ChangeDetectorRef},{type:n.Renderer2},{type:n.NgZone}]},t.propDecorators={reactNodeRef:[{type:n.ViewChild,args:["reactNode",{static:!0}]}]},t}(d);var y=function(e){function t(n,t,r,o){return e.call(this,n,t,r,o)||this}return u(t,e),t.decorators=[{type:n.Component,args:[{selector:"fab-default-button",exportAs:"fabDefaultButton",template:'\n    <DefaultButton\n      #reactNode\n      [componentRef]="componentRef"\n      [href]="href"\n      [primary]="primary"\n      [uniqueId]="uniqueId"\n      [disabled]="disabled"\n      [allowDisabledFocus]="allowDisabledFocus"\n      [primaryDisabled]="primaryDisabled"\n      [styles]="styles"\n      [theme]="theme"\n      [checked]="checked"\n      [className]="className"\n      [ariaLabel]="ariaLabel"\n      [ariaDescription]="ariaDescription"\n      [ariaHidden]="ariaHidden"\n      [aria-selected]="ariaSelected"\n      [role]="role"\n      [tabIndex]="tabIndex"\n      [text]="text"\n      [iconProps]="iconProps"\n      [menuProps]="menuProps"\n      [split]="split"\n      [menuIconProps]="menuIconProps"\n      [splitButtonAriaLabel]="splitButtonAriaLabel"\n      [menuAs]="menuAs"\n      [secondaryText]="secondaryText"\n      [toggle]="toggle"\n      [data]="data"\n      [getClassNames]="getClassNames"\n      [getSplitButtonClassNames]="getSplitButtonClassNames"\n      [menuTriggerKeyCode]="menuTriggerKeyCode"\n      [keytipProps]="keytipProps"\n      [persistMenu]="persistMenu"\n      [RenderIcon]="renderIcon && onRenderIcon"\n      [RenderText]="renderText && onRenderText"\n      [RenderDescription]="renderDescription && onRenderDescription"\n      [RenderAriaDescription]="renderAriaDescription && onRenderAriaDescription"\n      [RenderChildren]="renderChildren && onRenderChildren"\n      [RenderMenuIcon]="renderMenuIcon && onRenderMenuIcon"\n      [MenuClick]="onMenuClickHandler"\n      (onAfterMenuDismiss)="onAfterMenuDismiss.emit($event)"\n      (onClick)="onClickHandler($event)"\n    >\n      <ReactContent><ng-content></ng-content></ReactContent>\n    </DefaultButton>\n  ',changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["react-renderer"]}]}],t.ctorParameters=function(){return[{type:n.ElementRef},{type:n.ChangeDetectorRef},{type:n.Renderer2},{type:n.NgZone}]},t.propDecorators={reactNodeRef:[{type:n.ViewChild,args:["reactNode",{static:!0}]}]},t}(d);var C=function(e){function t(n,t,r,o){return e.call(this,n,t,r,o)||this}return u(t,e),t.decorators=[{type:n.Component,args:[{selector:"fab-icon-button",exportAs:"fabIconButton",template:'\n    <IconButton\n      #reactNode\n      [componentRef]="componentRef"\n      [href]="href"\n      [primary]="primary"\n      [uniqueId]="uniqueId"\n      [disabled]="disabled"\n      [allowDisabledFocus]="allowDisabledFocus"\n      [primaryDisabled]="primaryDisabled"\n      [styles]="styles"\n      [theme]="theme"\n      [checked]="checked"\n      [className]="className"\n      [ariaLabel]="ariaLabel"\n      [ariaDescription]="ariaDescription"\n      [ariaHidden]="ariaHidden"\n      [aria-selected]="ariaSelected"\n      [role]="role"\n      [tabIndex]="tabIndex"\n      [text]="text"\n      [iconProps]="iconProps"\n      [menuProps]="menuProps"\n      [split]="split"\n      [menuIconProps]="menuIconProps"\n      [splitButtonAriaLabel]="splitButtonAriaLabel"\n      [menuAs]="menuAs"\n      [secondaryText]="secondaryText"\n      [toggle]="toggle"\n      [data]="data"\n      [getClassNames]="getClassNames"\n      [getSplitButtonClassNames]="getSplitButtonClassNames"\n      [menuTriggerKeyCode]="menuTriggerKeyCode"\n      [keytipProps]="keytipProps"\n      [persistMenu]="persistMenu"\n      [RenderIcon]="renderIcon && onRenderIcon"\n      [RenderText]="renderText && onRenderText"\n      [RenderDescription]="renderDescription && onRenderDescription"\n      [RenderAriaDescription]="renderAriaDescription && onRenderAriaDescription"\n      [RenderChildren]="renderChildren && onRenderChildren"\n      [RenderMenuIcon]="renderMenuIcon && onRenderMenuIcon"\n      [MenuClick]="onMenuClickHandler"\n      (onAfterMenuDismiss)="onAfterMenuDismiss.emit($event)"\n      (onClick)="onClickHandler($event)"\n    >\n      <ReactContent><ng-content></ng-content></ReactContent>\n    </IconButton>\n  ',changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["react-renderer"]}]}],t.ctorParameters=function(){return[{type:n.ElementRef},{type:n.ChangeDetectorRef},{type:n.Renderer2},{type:n.NgZone}]},t.propDecorators={reactNodeRef:[{type:n.ViewChild,args:["reactNode",{static:!0}]}]},t}(d);var f=function(e){function t(n,t,r,o){return e.call(this,n,t,r,o)||this}return u(t,e),t.decorators=[{type:n.Component,args:[{selector:"fab-messagebar-button",exportAs:"fabMessageBarButton",template:'\n    <MessageBarButton\n      #reactNode\n      [componentRef]="componentRef"\n      [href]="href"\n      [primary]="primary"\n      [uniqueId]="uniqueId"\n      [disabled]="disabled"\n      [allowDisabledFocus]="allowDisabledFocus"\n      [primaryDisabled]="primaryDisabled"\n      [styles]="styles"\n      [theme]="theme"\n      [checked]="checked"\n      [className]="className"\n      [ariaLabel]="ariaLabel"\n      [ariaDescription]="ariaDescription"\n      [ariaHidden]="ariaHidden"\n      [aria-selected]="ariaSelected"\n      [role]="role"\n      [tabIndex]="tabIndex"\n      [text]="text"\n      [iconProps]="iconProps"\n      [menuProps]="menuProps"\n      [split]="split"\n      [menuIconProps]="menuIconProps"\n      [splitButtonAriaLabel]="splitButtonAriaLabel"\n      [menuAs]="menuAs"\n      [secondaryText]="secondaryText"\n      [toggle]="toggle"\n      [data]="data"\n      [getClassNames]="getClassNames"\n      [getSplitButtonClassNames]="getSplitButtonClassNames"\n      [menuTriggerKeyCode]="menuTriggerKeyCode"\n      [keytipProps]="keytipProps"\n      [persistMenu]="persistMenu"\n      [RenderIcon]="renderIcon && onRenderIcon"\n      [RenderText]="renderText && onRenderText"\n      [RenderDescription]="renderDescription && onRenderDescription"\n      [RenderAriaDescription]="renderAriaDescription && onRenderAriaDescription"\n      [RenderChildren]="renderChildren && onRenderChildren"\n      [RenderMenuIcon]="renderMenuIcon && onRenderMenuIcon"\n      [MenuClick]="onMenuClickHandler"\n      (onAfterMenuDismiss)="onAfterMenuDismiss.emit($event)"\n      (onClick)="onClickHandler($event)"\n    >\n      <ReactContent><ng-content></ng-content></ReactContent>\n    </MessageBarButton>\n  ',changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["react-renderer"]}]}],t.ctorParameters=function(){return[{type:n.ElementRef},{type:n.ChangeDetectorRef},{type:n.Renderer2},{type:n.NgZone}]},t.propDecorators={reactNodeRef:[{type:n.ViewChild,args:["reactNode",{static:!0}]}]},t}(d);var b=function(e){function t(n,t,r,o){return e.call(this,n,t,r,o)||this}return u(t,e),t.decorators=[{type:n.Component,args:[{selector:"fab-primary-button",exportAs:"fabPrimaryButton",template:'\n    <PrimaryButton\n      #reactNode\n      [componentRef]="componentRef"\n      [href]="href"\n      [primary]="primary"\n      [uniqueId]="uniqueId"\n      [disabled]="disabled"\n      [allowDisabledFocus]="allowDisabledFocus"\n      [primaryDisabled]="primaryDisabled"\n      [styles]="styles"\n      [theme]="theme"\n      [checked]="checked"\n      [className]="className"\n      [ariaLabel]="ariaLabel"\n      [ariaDescription]="ariaDescription"\n      [ariaHidden]="ariaHidden"\n      [aria-selected]="ariaSelected"\n      [role]="role"\n      [tabIndex]="tabIndex"\n      [text]="text"\n      [iconProps]="iconProps"\n      [menuProps]="menuProps"\n      [split]="split"\n      [menuIconProps]="menuIconProps"\n      [splitButtonAriaLabel]="splitButtonAriaLabel"\n      [menuAs]="menuAs"\n      [secondaryText]="secondaryText"\n      [toggle]="toggle"\n      [data]="data"\n      [getClassNames]="getClassNames"\n      [getSplitButtonClassNames]="getSplitButtonClassNames"\n      [menuTriggerKeyCode]="menuTriggerKeyCode"\n      [keytipProps]="keytipProps"\n      [persistMenu]="persistMenu"\n      [RenderIcon]="renderIcon && onRenderIcon"\n      [RenderText]="renderText && onRenderText"\n      [RenderDescription]="renderDescription && onRenderDescription"\n      [RenderAriaDescription]="renderAriaDescription && onRenderAriaDescription"\n      [RenderChildren]="renderChildren && onRenderChildren"\n      [RenderMenuIcon]="renderMenuIcon && onRenderMenuIcon"\n      [MenuClick]="onMenuClickHandler"\n      (onAfterMenuDismiss)="onAfterMenuDismiss.emit($event)"\n      (onClick)="onClickHandler($event)"\n    >\n      <ReactContent><ng-content></ng-content></ReactContent>\n    </PrimaryButton>\n  ',changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["react-renderer"]}]}],t.ctorParameters=function(){return[{type:n.ElementRef},{type:n.ChangeDetectorRef},{type:n.Renderer2},{type:n.NgZone}]},t.propDecorators={reactNodeRef:[{type:n.ViewChild,args:["reactNode",{static:!0}]}]},t}(d);var h=function(e){function t(n,t,r,o){return e.call(this,n,t,r,o)||this}return u(t,e),t.decorators=[{type:n.Component,args:[{selector:"fab-split-button",exportAs:"fabSplitButton",template:'\n    <SplitButton\n      #reactNode\n      [componentRef]="componentRef"\n      [href]="href"\n      [primary]="primary"\n      [uniqueId]="uniqueId"\n      [disabled]="disabled"\n      [allowDisabledFocus]="allowDisabledFocus"\n      [primaryDisabled]="primaryDisabled"\n      [styles]="styles"\n      [theme]="theme"\n      [checked]="checked"\n      [className]="className"\n      [ariaLabel]="ariaLabel"\n      [ariaDescription]="ariaDescription"\n      [ariaHidden]="ariaHidden"\n      [aria-selected]="ariaSelected"\n      [role]="role"\n      [tabIndex]="tabIndex"\n      [text]="text"\n      [iconProps]="iconProps"\n      [menuProps]="menuProps"\n      [split]="split"\n      [menuIconProps]="menuIconProps"\n      [splitButtonAriaLabel]="splitButtonAriaLabel"\n      [menuAs]="menuAs"\n      [secondaryText]="secondaryText"\n      [toggle]="toggle"\n      [data]="data"\n      [getClassNames]="getClassNames"\n      [getSplitButtonClassNames]="getSplitButtonClassNames"\n      [menuTriggerKeyCode]="menuTriggerKeyCode"\n      [keytipProps]="keytipProps"\n      [persistMenu]="persistMenu"\n      [RenderIcon]="renderIcon && onRenderIcon"\n      [RenderText]="renderText && onRenderText"\n      [RenderDescription]="renderDescription && onRenderDescription"\n      [RenderAriaDescription]="renderAriaDescription && onRenderAriaDescription"\n      [RenderChildren]="renderChildren && onRenderChildren"\n      [RenderMenuIcon]="renderMenuIcon && onRenderMenuIcon"\n      [MenuClick]="onMenuClickHandler"\n      (onAfterMenuDismiss)="onAfterMenuDismiss.emit($event)"\n      (onClick)="onClickHandler($event)"\n    >\n      <ReactContent><ng-content></ng-content></ReactContent>\n    </SplitButton>\n  ',changeDetection:n.ChangeDetectionStrategy.OnPush,styles:["react-renderer"]}]}],t.ctorParameters=function(){return[{type:n.ElementRef},{type:n.ChangeDetectorRef},{type:n.Renderer2},{type:n.NgZone}]},t.propDecorators={reactNodeRef:[{type:n.ViewChild,args:["reactNode",{static:!0}]}]},t}(d);var I=[y,p,m,g,C,f,b,h],R=function(){function e(){t.registerElement("DefaultButton",(function(){return s.DefaultButton})),t.registerElement("ActionButton",(function(){return s.ActionButton})),t.registerElement("CommandBarButton",(function(){return s.CommandBarButton})),t.registerElement("CompoundButton",(function(){return s.CompoundButton})),t.registerElement("IconButton",(function(){return s.IconButton})),t.registerElement("MessageBarButton",(function(){return s.MessageBarButton})),t.registerElement("PrimaryButton",(function(){return s.PrimaryButton}))}return e.decorators=[{type:n.NgModule,args:[{imports:[i.CommonModule],declarations:I,exports:I,schemas:[n.NO_ERRORS_SCHEMA]}]}],e.ctorParameters=function(){return[]},e}();e.FabActionButtonComponent=p,e.FabButtonModule=R,e.FabCommandBarButtonComponent=m,e.FabCompoundButtonComponent=g,e.FabDefaultButtonComponent=y,e.FabIconButtonComponent=C,e.FabMessageBarButtonComponent=f,e.FabPrimaryButtonComponent=b,e.FabSplitButtonComponent=h,e.ɵa=d,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-react-fabric-lib-components-button.umd.min.js.map